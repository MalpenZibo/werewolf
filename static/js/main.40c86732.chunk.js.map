{"version":3,"sources":["ConfigProvider.tsx","routing.ts","Router/RouterProvider.tsx","Pages/Home.tsx","domain.ts","blocks/Common/ConfirmationDialog.tsx","blocks/PlayerCard.tsx","Form/TextField.tsx","Form/validators.ts","blocks/PlayerForm.tsx","Pages/Players.tsx","useLocalStorageState.ts","Icons/DarkAuraIcon.tsx","Icons/MysticalIcon.tsx","blocks/RoleCard.tsx","utils.ts","Pages/Roles.tsx","App.tsx","reportWebVitals.ts","blocks/Common/Waiting.tsx","IntlProvider.tsx","config.ts","index.tsx"],"names":["BuildConfigContext","createContext","option","none","BuildConfigProvider","basepath","children","Provider","value","some","home","_tag","roles","game","players","locations","defaults","end","rolesMatch","lit","then","gameMatch","playersMatch","router","zero","alt","parser","map","routing","formatLocation","l","format","formatter","parseLocation","s","parse","Route","RouterContext","RouterProvider","props","skipN","pipe","b","split","length","getOrElse","constant","getPathname","window","location","pathname","string","nonEmptyArray","fromReadonlyNonEmptyArray","array","dropLeft","join","useState","setLocation","handleLocationChanges","useEffect","addEventListener","removeEventListener","internalRouting","formatted","useRouter","ctx","useContext","isNone","Error","current","navigateTo","newLocation","console","log","history","pushState","scrollTo","back","initializeRouter","Home","Box","display","width","flexDirection","alignItems","Button","variant","color","onClick","id","primaryWolf","aura","mystical","faction","secondaryWolf","youngWolf","traitor","seer","wizard","medium","witch","healer","farmer","innkeeper","bard","monk","heremit","priest","sinner","madman","jester","factions","record","toArray","uniq","S","Player","t","name","NonEmptyString","ConfirmationDialog","Dialog","open","onClose","onCancel","DialogTitle","title","DialogContent","DialogContentText","content","DialogActions","autoFocus","onConfirm","PlayerCard","deleteDialogOpen","setDeleteDialogOpen","Grid","item","xs","sm","md","lg","Card","CardMedia","CardContent","Typography","gutterBottom","player","CardActions","disableSpacing","IconButton","aria-label","onDelete","TextField","fullWidth","label","defaultValue","placeholder","disabled","onChange","e","currentTarget","onBlur","error","issues","isSome","helperText","head","toNullable","useValidators","errorMessage","intl","useIntl","nonBlankString","formatMessage","validators","validator","either","fromPredicate","trim","uniqueString","collection","findFirst","p","defined","definedNoExtract","PlayerForm","useFormo","initialValues","fieldValidators","inParallel","playerNames","onSubmit","values","taskEither","fromIO","fieldProps","handleSubmit","useStyles","makeStyles","theme","createStyles","fab","position","bottom","spacing","right","Players","classes","key","codec","setLocalStorage","encode","json","stringify","bimap","encodedValue","localStorage","setItem","initValues","getItem","fromNullable","chain","flow","mapLeft","chainW","decode","failure","fromEither","reactState","setReactState","fold","useLocalStorageState","setPlayers","playerFormOpen","setPlayerFormOpen","AppBar","Toolbar","edge","m","container","direction","justifyContent","filter","Fab","className","DarkAuraIcon","SvgIcon","d","MysticalIcon","RoleCard","formatName","roleId","formatDescription","useFormatRole","role","Roles","formatFaction","useFormatFaction","f","Accordion","AccordionSummary","expandIcon","r","InternalApp","matches","Game","App","buildConfig","useBuildConfigContext","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Waiting","height","CircularProgress","IntlProvider","messages","setMessages","locale","tryCatch","default","identity","BuildConfigCodec","REACT_APP_BASEPATH","optionFromNullable","process","errors","env","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40c86732.chunk.js","sourcesContent":["import { option } from \"fp-ts\";\nimport { createContext, useContext } from \"react\";\nimport { Option } from \"fp-ts/Option\";\nimport { BuildConfig } from \"./config\";\n\nexport const BuildConfigContext = createContext<Option<BuildConfig>>(\n  option.none\n);\n\ntype Props = BuildConfig & {\n  children: JSX.Element;\n};\n\nexport function BuildConfigProvider({ basepath, children }: Props) {\n  return (\n    <BuildConfigContext.Provider value={option.some({ basepath })}>\n      {children}\n    </BuildConfigContext.Provider>\n  );\n}\n\nexport function useBuildConfigContext() {\n  const ctx = useContext(BuildConfigContext);\n\n  if (option.isNone(ctx)) {\n    throw new Error(\"BuildConfigContext not provided\");\n  }\n\n  return ctx.value;\n}\n","import { end, format, lit, parse, Route, zero } from \"fp-ts-routing\";\nimport { initializeRouter, Routing } from \"./Router/RouterProvider\";\n\ninterface Home {\n  readonly _tag: \"Home\";\n}\n\ninterface Roles {\n  readonly _tag: \"Roles\";\n}\n\ninterface Game {\n  readonly _tag: \"Game\";\n}\n\ninterface Players {\n  readonly _tag: \"Players\";\n}\n\nexport type Location = Home | Roles | Game | Players;\n\nconst home: Home = { _tag: \"Home\" };\nconst roles: Roles = { _tag: \"Roles\" };\nconst game: Game = { _tag: \"Game\" };\nconst players: Players = { _tag: \"Players\" };\n\nexport const locations = {\n  home,\n  roles,\n  game,\n  players,\n};\n\nconst defaults = end;\nconst rolesMatch = lit(\"roles\").then(end);\nconst gameMatch = lit(\"game\").then(end);\nconst playersMatch = lit(\"players\").then(end);\n\nconst router = zero<Location>()\n  .alt(defaults.parser.map(() => home))\n  .alt(rolesMatch.parser.map(() => roles))\n  .alt(gameMatch.parser.map(() => game))\n  .alt(playersMatch.parser.map(() => players));\n\nfunction parseLocation(s: string): Location {\n  return parse(router, Route.parse(s), home);\n}\n\nfunction formatLocation(l: Location): string {\n  switch (l._tag) {\n    case \"Home\":\n      return format(defaults.formatter, l);\n    case \"Roles\":\n      return format(rolesMatch.formatter, l);\n    case \"Game\":\n      return format(gameMatch.formatter, l);\n    case \"Players\":\n      return format(playersMatch.formatter, l);\n  }\n}\n\nexport const routing: Routing<Location> = {\n  formatLocation,\n  parseLocation,\n};\n\nexport const { RouterProvider, useRouter } = initializeRouter<Location>();\n","import {\n  createContext,\n  useEffect,\n  useState,\n  useContext,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\nimport { Option } from \"fp-ts/Option\";\nimport { array, option, string, nonEmptyArray } from \"fp-ts\";\nimport { constant, pipe } from \"fp-ts/function\";\n\ninterface ILocation {\n  readonly _tag: string;\n}\n\ninterface ILocationFoldable<K extends string> {\n  readonly _tag: K;\n}\n\nexport function foldLocation<\n  K extends string,\n  T extends ILocationFoldable<K>,\n  R\n>(\n  matches: {\n    [L in T[\"_tag\"]]: (args: Omit<Extract<T, { _tag: L }>, \"_tag\">) => R;\n  }\n): (location: T) => R {\n  return (location) => matches[location._tag](location as any);\n}\n\nexport type Routing<T extends ILocation> = {\n  formatLocation: (l: T) => string;\n  parseLocation: (s: string) => T;\n};\n\ntype Props<T extends ILocation> = {\n  routing: Routing<T>;\n  basepath: Option<string>;\n  children: JSX.Element;\n};\n\nexport function initializeRouter<T extends ILocation>() {\n  const RouterContext = createContext<\n    Option<{\n      routing: Routing<T>;\n      location: T;\n      setLocation: Dispatch<SetStateAction<T>>;\n    }>\n  >(option.none);\n\n  const RouterProvider = (props: Props<T>) => {\n    const skipN = pipe(\n      props.basepath,\n      option.map((b) => b.split(\"/\").length + 1),\n      option.getOrElse(constant(0))\n    );\n\n    const getPathname = () =>\n      \"/\" +\n      pipe(\n        window.location.pathname,\n        string.split(\"/\"),\n        nonEmptyArray.fromReadonlyNonEmptyArray,\n        array.dropLeft(skipN)\n      ).join(\"/\");\n\n    const [location, setLocation] = useState(\n      props.routing.parseLocation(getPathname())\n    );\n\n    const handleLocationChanges = () => {\n      setLocation(props.routing.parseLocation(getPathname()));\n    };\n\n    useEffect(() => {\n      window.addEventListener(\"popstate\", handleLocationChanges);\n\n      return () => {\n        window.removeEventListener(\"popstate\", handleLocationChanges);\n      };\n    });\n\n    const formatLocation = (l: T) => {\n      const formatted = props.routing.formatLocation(l);\n      return (\n        pipe(\n          props.basepath,\n          option.map((b) => \"/\" + b),\n          option.getOrElse(constant(\"\"))\n        ) + formatted\n      );\n    };\n\n    const internalRouting = {\n      parseLocation: props.routing.parseLocation,\n      formatLocation,\n    };\n\n    return (\n      <RouterContext.Provider\n        value={option.some({ routing: internalRouting, location, setLocation })}\n      >\n        {props.children}\n      </RouterContext.Provider>\n    );\n  };\n\n  const useRouter = () => {\n    const ctx = useContext(RouterContext);\n\n    if (option.isNone(ctx)) {\n      throw new Error(\"RouterContext not provided\");\n    }\n\n    const navigateTo = (location: T) => {\n      const newLocation = ctx.value.routing.formatLocation(location);\n      console.log(newLocation);\n      window.history.pushState(null, \"\", newLocation);\n      window.scrollTo(0, 0);\n      ctx.value.setLocation(location);\n    };\n\n    const back = () => {\n      window.history.back();\n    };\n\n    return { current: ctx.value.location, navigateTo, back };\n  };\n\n  return { RouterProvider, useRouter };\n}\n","import { Box, Button } from \"@material-ui/core\";\nimport { FormattedMessage } from \"react-intl\";\nimport { locations, useRouter } from \"../routing\";\n\nexport function Home() {\n  const router = useRouter();\n\n  return (\n    <Box display=\"flex\" width={1} flexDirection=\"column\" alignItems=\"center\">\n      <h1>Welcome</h1>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => router.navigateTo(locations.roles)}\n      >\n        <FormattedMessage id=\"role\" />\n      </Button>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => router.navigateTo(locations.players)}\n      >\n        <FormattedMessage id=\"players\" />\n      </Button>\n    </Box>\n  );\n}\n","import { array, record } from \"fp-ts\";\nimport * as S from \"fp-ts/string\";\nimport { pipe } from \"fp-ts/function\";\nimport * as t from \"io-ts\";\nimport { NonEmptyString } from \"io-ts-types/NonEmptyString\";\n\nexport interface Role {\n  readonly id: RoleId;\n  readonly aura: Aura;\n  readonly mystical: boolean;\n  readonly faction: Faction;\n}\n\nconst primaryWolf: Role = {\n  id: \"primaryWolf\",\n  aura: \"dark\",\n  mystical: false,\n  faction: \"wolf\",\n};\nconst secondaryWolf: Role = {\n  id: \"secondaryWolf\",\n  aura: \"dark\",\n  mystical: false,\n  faction: \"wolf\",\n};\nconst youngWolf: Role = {\n  id: \"youngWolf\",\n  aura: \"dark\",\n  mystical: false,\n  faction: \"wolf\",\n};\nconst traitor: Role = {\n  id: \"traitor\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"wolf\",\n};\nconst seer: Role = {\n  id: \"seer\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n};\nconst wizard: Role = {\n  id: \"wizard\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n};\nconst medium: Role = {\n  id: \"medium\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n};\nconst witch: Role = {\n  id: \"witch\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n};\nconst healer: Role = {\n  id: \"healer\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n};\nconst farmer: Role = {\n  id: \"farmer\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n};\nconst innkeeper: Role = {\n  id: \"innkeeper\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n};\nconst bard: Role = {\n  id: \"bard\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n};\nconst monk: Role = {\n  id: \"monk\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n};\nconst heremit: Role = {\n  id: \"heremit\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n};\nconst priest: Role = {\n  id: \"priest\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n};\nconst sinner: Role = {\n  id: \"sinner\",\n  aura: \"dark\",\n  mystical: false,\n  faction: \"village\",\n};\nconst madman: Role = {\n  id: \"madman\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"general\",\n};\nconst jester: Role = {\n  id: \"jester\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"general\",\n};\n\nexport const roles = {\n  primaryWolf,\n  secondaryWolf,\n  youngWolf,\n  traitor,\n  seer,\n  wizard,\n  medium,\n  witch,\n  healer,\n  farmer,\n  innkeeper,\n  bard,\n  monk,\n  heremit,\n  priest,\n  sinner,\n  madman,\n  jester,\n};\n\nexport type RoleId =\n  | \"primaryWolf\"\n  | \"secondaryWolf\"\n  | \"youngWolf\"\n  | \"traitor\"\n  | \"seer\"\n  | \"wizard\"\n  | \"medium\"\n  | \"witch\"\n  | \"healer\"\n  | \"farmer\"\n  | \"innkeeper\"\n  | \"bard\"\n  | \"monk\"\n  | \"heremit\"\n  | \"priest\"\n  | \"sinner\"\n  | \"madman\"\n  | \"jester\";\n\nexport type Faction = \"village\" | \"general\" | \"wolf\";\n\nexport type Aura = \"light\" | \"dark\";\n\nexport const factions = pipe(\n  roles,\n  record.toArray,\n  array.map(([, r]) => r.faction),\n  array.uniq<Faction>(S.Eq)\n);\n\nexport const Player = t.type({\n  name: NonEmptyString,\n});\nexport type Player = t.TypeOf<typeof Player>;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { IO } from \"fp-ts/IO\";\nimport { FormattedMessage } from \"react-intl\";\n\ntype Props = {\n  open: boolean;\n  title: string;\n  content: string;\n  onConfirm: IO<void>;\n  onCancel: IO<void>;\n};\n\nexport function ConfirmationDialog(props: Props) {\n  return (\n    <Dialog open={props.open} onClose={props.onCancel}>\n      <DialogTitle>\n        <FormattedMessage id={props.title} />\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <FormattedMessage id={props.content} />\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={props.onCancel} color=\"primary\">\n          <FormattedMessage id=\"cancel\" />\n        </Button>\n        <Button onClick={props.onConfirm} color=\"primary\">\n          <FormattedMessage id=\"ok\" />\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Grid,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport { Player } from \"../domain\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { IO } from \"fp-ts//IO\";\nimport { useState } from \"react\";\nimport { ConfirmationDialog } from \"./Common/ConfirmationDialog\";\n\ntype Props = {\n  player: Player;\n  onDelete: IO<void>;\n};\n\nexport function PlayerCard(props: Props) {\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n\n  return (\n    <Grid item xs={6} sm={4} md={3} lg={2}>\n      <Card>\n        <CardMedia></CardMedia>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\">\n            {props.player.name}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton\n            aria-label=\"delete\"\n            onClick={() => setDeleteDialogOpen(true)}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n      <ConfirmationDialog\n        open={deleteDialogOpen}\n        title=\"player.delete.confirmDialog.title\"\n        content=\"player.delete.confirmDialog.content\"\n        onConfirm={() => {\n          console.log(\"prova\");\n          setDeleteDialogOpen(false);\n          props.onDelete();\n        }}\n        onCancel={() => setDeleteDialogOpen(false)}\n      />\n    </Grid>\n  );\n}\n","import { FieldProps } from \"@buildo/formo\";\nimport { TextField as InternalTextField } from \"@material-ui/core\";\nimport { nonEmptyArray, option } from \"fp-ts\";\nimport { pipe } from \"fp-ts/function\";\nimport { NonEmptyArray } from \"fp-ts/NonEmptyArray\";\n\ntype Props = FieldProps<string, string, NonEmptyArray<string>> & {\n  placeholder: string;\n};\n\nexport function TextField(props: Props) {\n  return (\n    <InternalTextField\n      fullWidth\n      label={props.label}\n      defaultValue={props.placeholder}\n      disabled={props.disabled}\n      onChange={(e) => props.onChange(e.currentTarget.value)}\n      onBlur={props.onBlur}\n      value={props.value}\n      name={props.name}\n      error={pipe(props.issues, option.isSome)}\n      helperText={pipe(\n        props.issues,\n        option.map((issues) => pipe(issues, nonEmptyArray.head)),\n        option.toNullable\n      )}\n    />\n  );\n}\n","import { useIntl } from \"react-intl\";\nimport { Validator, validators } from \"@buildo/formo\";\nimport { constant, pipe } from \"fp-ts/function\";\nimport { array, either, option } from \"fp-ts\";\nimport { NonEmptyString } from \"io-ts-types/NonEmptyString\";\n\nexport const nonBlankString = (\n  errorMessage: string\n): Validator<string, NonEmptyString, string> =>\n  validators.validator(\n    either.fromPredicate(\n      (s): s is NonEmptyString => s.trim().length > 0,\n      constant(errorMessage)\n    )\n  );\n\nexport const uniqueString =\n  (\n    errorMessage: string\n  ): ((\n    collection: NonEmptyString[]\n  ) => Validator<string, NonEmptyString, string>) =>\n  (collection: NonEmptyString[]) =>\n    validators.validator(\n      either.fromPredicate(\n        (s): s is NonEmptyString =>\n          pipe(\n            collection,\n            array.findFirst((p) => p === s),\n            option.isNone\n          ),\n        constant(errorMessage)\n      )\n    );\n\nexport function useValidators() {\n  const intl = useIntl();\n\n  const defined = <T>() =>\n    validators.defined<T, string>(\n      intl.formatMessage({ id: \"form.validators.defined\" })\n    );\n\n  const definedNoExtract = <T>() =>\n    validators.definedNoExtract<T, string>(\n      intl.formatMessage({ id: \"form.validators.defined\" })\n    );\n\n  const nonBlankStringInternal = nonBlankString(\n    intl.formatMessage({ id: \"form.validators.nonBlankString\" })\n  );\n\n  const uniqueStringInternal = uniqueString(\n    intl.formatMessage({ id: \"form.validators.uniqueString\" })\n  );\n\n  return {\n    nonBlankString: nonBlankStringInternal,\n    uniqueString: uniqueStringInternal,\n    defined,\n    definedNoExtract,\n  };\n}\n","import { useFormo, validators } from \"@buildo/formo\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { IO } from \"fp-ts/IO\";\nimport { Reader } from \"fp-ts/Reader\";\nimport { NonEmptyString } from \"io-ts-types/lib/NonEmptyString\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { TextField } from \"../Form/TextField\";\nimport { useValidators } from \"../Form/validators\";\nimport { taskEither } from \"fp-ts\";\n\ntype Props = {\n  open: boolean;\n  title: string;\n  playerNames: NonEmptyString[];\n  onConfirm: Reader<NonEmptyString, void>;\n  onCancel: IO<void>;\n};\n\nexport function PlayerForm(props: Props) {\n  const { formatMessage } = useIntl();\n  const { nonBlankString, uniqueString } = useValidators();\n\n  const { fieldProps, handleSubmit } = useFormo(\n    {\n      initialValues: {\n        name: \"\",\n      },\n      fieldValidators: () => ({\n        name: validators.inParallel(\n          nonBlankString,\n          uniqueString(props.playerNames)\n        ),\n      }),\n    },\n    {\n      onSubmit: (values) =>\n        taskEither.fromIO(() => props.onConfirm(values.name)),\n    }\n  );\n\n  return (\n    <Dialog open={props.open} fullWidth onClose={props.onCancel}>\n      <DialogTitle>\n        <FormattedMessage id={props.title} />\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          label={formatMessage({\n            id: \"player.form.label.name\",\n          })}\n          placeholder=\"\"\n          {...fieldProps(\"name\")}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onCancel} color=\"primary\">\n          <FormattedMessage id=\"cancel\" />\n        </Button>\n        <Button onClick={handleSubmit} color=\"primary\">\n          <FormattedMessage id=\"ok\" />\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import {\n  AppBar,\n  Box,\n  createStyles,\n  Fab,\n  Grid,\n  IconButton,\n  makeStyles,\n  Theme,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport ArrowBackSharp from \"@material-ui/icons/ArrowBackSharp\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Player } from \"../domain\";\nimport { locations, useRouter } from \"../routing\";\nimport { useLocalStorageState } from \"../useLocalStorageState\";\nimport * as t from \"io-ts\";\nimport { PlayerCard } from \"../blocks/PlayerCard\";\nimport { array } from \"fp-ts\";\nimport { pipe } from \"fp-ts/function\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { PlayerForm } from \"../blocks/PlayerForm\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      position: \"absolute\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  })\n);\n\nexport function Players() {\n  const classes = useStyles();\n  const router = useRouter();\n\n  const [players, setPlayers] = useLocalStorageState(\n    \"players\",\n    t.array(Player),\n    []\n  );\n\n  const [playerFormOpen, setPlayerFormOpen] = useState(false);\n\n  return (\n    <Box display=\"flex\" width={1} flexDirection=\"column\" alignItems=\"center\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => router.navigateTo(locations.home)}\n          >\n            <ArrowBackSharp />\n          </IconButton>\n          <Box display=\"flex\" width={1}>\n            <Typography variant=\"h6\">\n              <FormattedMessage id=\"players\" />\n            </Typography>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Box\n        display=\"flex\"\n        m={2}\n        width={1}\n        flexDirection=\"row\"\n        alignItems=\"center\"\n      >\n        <Grid\n          container\n          direction=\"row\"\n          spacing={2}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          {players.map((p) => (\n            <PlayerCard\n              player={p}\n              onDelete={() =>\n                setPlayers(\n                  pipe(\n                    players,\n                    array.filter((m) => m.name !== p.name)\n                  )\n                )\n              }\n            />\n          ))}\n        </Grid>\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          className={classes.fab}\n          onClick={() => setPlayerFormOpen(true)}\n        >\n          <AddIcon />\n        </Fab>\n        {playerFormOpen && (\n          <PlayerForm\n            open={playerFormOpen}\n            title=\"player.form.label.title\"\n            playerNames={pipe(\n              players,\n              array.map((p) => p.name)\n            )}\n            onCancel={() => setPlayerFormOpen(false)}\n            onConfirm={(name) => {\n              setPlayers([...players, { name }]);\n              setPlayerFormOpen(false);\n            }}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { either, json, option } from \"fp-ts\";\nimport { flow, pipe } from \"fp-ts/function\";\nimport { Type } from \"io-ts\";\nimport { failure } from \"io-ts/lib/PathReporter\";\nimport { useState } from \"react\";\n\nexport function useLocalStorageState<T, TT>(\n  key: string,\n  codec: Type<T, TT>,\n  value: T\n): [T, (value: T) => void] {\n  const setLocalStorage = (value: T) =>\n    pipe(\n      value,\n      codec.encode,\n      json.stringify,\n      either.bimap(\n        (e) => {\n          console.error(e);\n          return e;\n        },\n        (encodedValue) => localStorage.setItem(key, encodedValue)\n      )\n    );\n\n  const initValues = pipe(\n    localStorage.getItem(key),\n    option.fromNullable,\n    option.chain(\n      flow(\n        json.parse,\n        either.mapLeft((e) => {\n          console.error(\"Json parse error: \", e);\n          return e;\n        }),\n        either.chainW(\n          flow(\n            codec.decode,\n            either.mapLeft((e) => {\n              console.error(\"Decoding error: \", failure(e).join(\"\\n\"));\n              return e;\n            })\n          )\n        ),\n        option.fromEither\n      )\n    ),\n    option.getOrElse(() => {\n      setLocalStorage(value);\n      return value;\n    })\n  );\n\n  const [reactState, setReactState] = useState(initValues);\n\n  const setState = (value: T) =>\n    pipe(\n      setLocalStorage(value),\n      either.fold(\n        () => {},\n        () => setReactState(value)\n      )\n    );\n\n  return [reactState, setState];\n}\n","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\n\nexport function DarkAuraIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12 1.5c-5.398 0-9.75 4.352-9.75 9.602v4.273a2.53 2.53 0 002.55 2.55c.45 0 1.2.223 1.2.825V21c0 .3.227.602.523.75 1.801.602 3.676.898 5.477.898 1.8 0 3.676-.296 5.477-.898.296-.074.523-.375.523-.75v-2.25c0-.602.75-.824 1.2-.824a2.53 2.53 0 002.55-2.551v-4.273c0-5.25-4.352-9.602-9.75-9.602zM9.227 16.273l-.903.153c-.148 0-.3.074-.523.074-.602 0-1.125-.227-1.653-.602a2.666 2.666 0 01-.898-1.949v-.148A2.53 2.53 0 017.8 11.25h.9c.823 0 1.5.375 2.027.977.449.597.671 1.421.449 2.171-.227.977-1.051 1.653-1.95 1.875zm3.824 1.653c-.074.074-.153.074-.301.074-.3 0-.523-.148-.676-.45L12 17.399l-.074.153c-.153.375-.602.523-.977.3-.375-.152-.523-.601-.3-.976l.75-1.5c.226-.523 1.05-.523 1.351 0l.75 1.5c.074.375-.074.824-.45 1.05zm5.699-3.977c0 .75-.375 1.5-.898 1.95a2.632 2.632 0 01-1.653.601c-.148 0-.3 0-.523-.074l-.903-.153c-.972-.222-1.722-.898-1.949-1.875-.222-.75 0-1.574.45-2.171.453-.602 1.203-.977 2.027-.977h.898a2.53 2.53 0 012.551 2.55zm0 0\"></path>\n    </SvgIcon>\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\n\nexport function MysticalIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <g>\n        <path d=\"M23.887 11.586c-.192-.316-4.742-7.75-11.887-7.75-7.145 0-11.695 7.434-11.887 7.75a.807.807 0 000 .828c.192.316 4.742 7.75 11.887 7.75 7.145 0 11.695-7.434 11.887-7.75a.807.807 0 000-.828zM12 18.559c-5.336 0-9.21-5.063-10.238-6.559C2.789 10.5 6.652 5.441 12 5.441c5.336 0 9.21 5.063 10.238 6.559-1.027 1.5-4.89 6.559-10.238 6.559zm0 0\"></path>\n        <path d=\"M12 6.598A5.406 5.406 0 006.598 12 5.409 5.409 0 0012 17.402 5.411 5.411 0 0017.402 12 5.406 5.406 0 0012 6.598zm0 9.199A3.801 3.801 0 018.203 12c0-2.094 1.703-3.8 3.797-3.8a3.804 3.804 0 013.797 3.8A3.801 3.801 0 0112 15.797zm0 0\"></path>\n        <path d=\"M12 9.93c-1.145 0-2.07.925-2.07 2.07 0 1.145.925 2.07 2.07 2.07 1.145 0 2.07-.925 2.07-2.07 0-1.145-.925-2.07-2.07-2.07zm0 0\"></path>\n      </g>\n    </SvgIcon>\n  );\n}\n","import { Box, Card, CardContent, Grid, Typography } from \"@material-ui/core\";\nimport { Role } from \"../domain\";\nimport { DarkAuraIcon } from \"../Icons/DarkAuraIcon\";\nimport { MysticalIcon } from \"../Icons/MysticalIcon\";\nimport { useFormatRole } from \"../utils\";\n\ntype Props = {\n  role: Role;\n};\n\nexport function RoleCard(props: Props) {\n  const { formatName, formatDescription } = useFormatRole();\n  return (\n    <Grid item xs={12} sm={6} md={4} lg={3}>\n      <Card>\n        <CardContent>\n          <Box display=\"flex\" width={1} flexDirection=\"row\">\n            <Box display=\"flex\" width={1}>\n              <Typography gutterBottom variant=\"h5\">\n                {formatName(props.role.id)}\n              </Typography>\n            </Box>\n            <Box display=\"flex\" alignItems=\"center\">\n              {props.role.aura === \"dark\" && <DarkAuraIcon />}\n              {props.role.mystical && <MysticalIcon />}\n            </Box>\n          </Box>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {formatDescription(props.role.id)}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}\n","import { useIntl } from \"react-intl\";\nimport { Faction, RoleId } from \"./domain\";\n\nexport function useFormatRole(): {\n  formatName: (roleId: RoleId) => string;\n  formatDescription: (roleId: RoleId) => string;\n} {\n  const { formatMessage } = useIntl();\n\n  const formatName = (roleId: RoleId) => {\n    switch (roleId) {\n      case \"primaryWolf\":\n        return formatMessage({ id: \"role.primaryWolf.name\" });\n      case \"secondaryWolf\":\n        return formatMessage({ id: \"role.secondaryWolf.name\" });\n      case \"youngWolf\":\n        return formatMessage({ id: \"role.youngWolf.name\" });\n      case \"traitor\":\n        return formatMessage({ id: \"role.traitor.name\" });\n      case \"seer\":\n        return formatMessage({ id: \"role.seer.name\" });\n      case \"wizard\":\n        return formatMessage({ id: \"role.wizard.name\" });\n      case \"medium\":\n        return formatMessage({ id: \"role.medium.name\" });\n      case \"witch\":\n        return formatMessage({ id: \"role.witch.name\" });\n      case \"healer\":\n        return formatMessage({ id: \"role.healer.name\" });\n      case \"farmer\":\n        return formatMessage({ id: \"role.farmer.name\" });\n      case \"innkeeper\":\n        return formatMessage({ id: \"role.innkeeper.name\" });\n      case \"bard\":\n        return formatMessage({ id: \"role.bard.name\" });\n      case \"monk\":\n        return formatMessage({ id: \"role.monk.name\" });\n      case \"heremit\":\n        return formatMessage({ id: \"role.heremit.name\" });\n      case \"priest\":\n        return formatMessage({ id: \"role.priest.name\" });\n      case \"sinner\":\n        return formatMessage({ id: \"role.sinner.name\" });\n      case \"madman\":\n        return formatMessage({ id: \"role.madman.name\" });\n      case \"jester\":\n        return formatMessage({ id: \"role.jester.name\" });\n    }\n  };\n\n  const formatDescription = (roleId: RoleId) => {\n    switch (roleId) {\n      case \"primaryWolf\":\n        return formatMessage({ id: \"role.primaryWolf.description\" });\n      case \"secondaryWolf\":\n        return formatMessage({ id: \"role.secondaryWolf.description\" });\n      case \"youngWolf\":\n        return formatMessage({ id: \"role.youngWolf.description\" });\n      case \"traitor\":\n        return formatMessage({ id: \"role.traitor.description\" });\n      case \"seer\":\n        return formatMessage({ id: \"role.seer.description\" });\n      case \"wizard\":\n        return formatMessage({ id: \"role.wizard.description\" });\n      case \"medium\":\n        return formatMessage({ id: \"role.medium.description\" });\n      case \"witch\":\n        return formatMessage({ id: \"role.witch.description\" });\n      case \"healer\":\n        return formatMessage({ id: \"role.healer.description\" });\n      case \"farmer\":\n        return formatMessage({ id: \"role.farmer.description\" });\n      case \"innkeeper\":\n        return formatMessage({ id: \"role.innkeeper.description\" });\n      case \"bard\":\n        return formatMessage({ id: \"role.bard.description\" });\n      case \"monk\":\n        return formatMessage({ id: \"role.monk.description\" });\n      case \"heremit\":\n        return formatMessage({ id: \"role.heremit.description\" });\n      case \"priest\":\n        return formatMessage({ id: \"role.priest.description\" });\n      case \"sinner\":\n        return formatMessage({ id: \"role.sinner.description\" });\n      case \"madman\":\n        return formatMessage({ id: \"role.madman.description\" });\n      case \"jester\":\n        return formatMessage({ id: \"role.jester.description\" });\n    }\n  };\n\n  return { formatName, formatDescription };\n}\n\nexport function useFormatFaction(): (faction: Faction) => string {\n  const { formatMessage } = useIntl();\n\n  const formatFaction = (faction: Faction) => {\n    switch (faction) {\n      case \"general\":\n        return formatMessage({ id: \"faction.general\" });\n      case \"wolf\":\n        return formatMessage({ id: \"faction.wolf\" });\n      case \"village\":\n        return formatMessage({ id: \"faction.village\" });\n    }\n  };\n\n  return formatFaction;\n}\n","import {\n  Accordion,\n  AccordionSummary,\n  AppBar,\n  Box,\n  Grid,\n  IconButton,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport ArrowBackSharp from \"@material-ui/icons/ArrowBackSharp\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { FormattedMessage } from \"react-intl\";\nimport { locations, useRouter } from \"../routing\";\nimport { Faction, factions, roles } from \"../domain\";\nimport { pipe } from \"fp-ts/function\";\nimport { array, record } from \"fp-ts\";\nimport { useFormatFaction } from \"../utils\";\nimport { RoleCard } from \"../blocks/RoleCard\";\n\nexport function Roles() {\n  const router = useRouter();\n  const formatFaction = useFormatFaction();\n\n  return (\n    <Box display=\"flex\" width={1} flexDirection=\"column\" alignItems=\"center\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => router.navigateTo(locations.home)}\n          >\n            <ArrowBackSharp />\n          </IconButton>\n          <Box display=\"flex\" width={1}>\n            <Typography variant=\"h6\">\n              <FormattedMessage id=\"role\" />\n            </Typography>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Box display=\"flex\" width={1} flexDirection=\"column\" alignItems=\"center\">\n        {pipe(\n          factions,\n          array.map((f: Faction) => (\n            <Accordion key={f}>\n              <AccordionSummary expandIcon={<ExpandMore />}>\n                <Typography>{formatFaction(f)}</Typography>\n              </AccordionSummary>\n              <Box m={2}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  spacing={2}\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  {pipe(\n                    roles,\n                    record.filter((r) => r.faction === f),\n                    record.toArray,\n                    array.map(([, r]) => <RoleCard key={r.id} role={r} />)\n                  )}\n                </Grid>\n              </Box>\n            </Accordion>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { pipe, constant } from \"fp-ts/function\";\nimport \"./App.css\";\nimport { useBuildConfigContext } from \"./ConfigProvider\";\nimport { Home } from \"./Pages/Home\";\nimport { Players } from \"./Pages/Players\";\nimport { Roles } from \"./Pages/Roles\";\nimport { foldLocation } from \"./Router/RouterProvider\";\nimport { RouterProvider, routing, useRouter } from \"./routing\";\n\nfunction InternalApp(): JSX.Element {\n  const router = useRouter();\n\n  return pipe(\n    router.current,\n    foldLocation({\n      Home: constant(<Home />),\n      Roles: constant(<Roles />),\n      Game: constant(<div></div>),\n      Players: constant(<Players />),\n    })\n  );\n}\n\nfunction App(): JSX.Element {\n  const buildConfig = useBuildConfigContext();\n\n  return (\n    <RouterProvider basepath={buildConfig.basepath} routing={routing}>\n      <InternalApp />\n    </RouterProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Box, CircularProgress } from \"@material-ui/core\";\n\nexport function Waiting() {\n  return (\n    <Box\n      display=\"flex\"\n      width={1}\n      height={1}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <CircularProgress />\n    </Box>\n  );\n}\n","import { option, taskEither } from \"fp-ts\";\nimport { identity } from \"io-ts\";\nimport { useEffect, useState } from \"react\";\nimport { Option } from \"fp-ts/Option\";\nimport { constant, pipe } from \"fp-ts/function\";\nimport { IntlProvider as InternalIntlProvider } from \"react-intl\";\nimport { Waiting } from \"./blocks/Common/Waiting\";\n\ntype Locale = \"it\";\n\ntype Props = {\n  children: JSX.Element;\n  locale: Locale;\n};\n\nfunction loadLocaleData(locale: Locale) {\n  return taskEither.tryCatch(() => {\n    switch (locale) {\n      case \"it\":\n        return import(\"./messages/it.json\").then((messages) => ({\n          ...messages.default,\n        }));\n    }\n  }, identity);\n}\n\nexport function IntlProvider(props: Props) {\n  const [messages, setMessages] = useState<Option<Record<string, string>>>(\n    option.none\n  );\n\n  useEffect(() => {\n    pipe(\n      loadLocaleData(props.locale),\n      taskEither.map((messages) => setMessages(option.some(messages)))\n    )();\n  }, [props.locale]);\n\n  return pipe(\n    messages,\n    option.fold(constant(<Waiting />), (messages) => (\n      <InternalIntlProvider messages={messages} locale={props.locale}>\n        {props.children}\n      </InternalIntlProvider>\n    ))\n  );\n}\n","import { either } from \"fp-ts\";\nimport * as t from \"io-ts\";\nimport { pipe } from \"fp-ts/function\";\nimport { failure } from \"io-ts/lib/PathReporter\";\nimport { optionFromNullable } from \"io-ts-types/optionFromNullable\";\nimport { NonEmptyString } from \"io-ts-types/NonEmptyString\";\nimport { Option } from \"fp-ts/Option\";\n\nexport type BuildConfig = {\n  basepath: Option<NonEmptyString>;\n};\n\nconst BuildConfigCodec = t.type(\n  {\n    REACT_APP_BASEPATH: optionFromNullable(NonEmptyString),\n  },\n  \"BuildConfig\"\n);\n\nexport const buildConfig: BuildConfig = pipe(\n  BuildConfigCodec.decode(process.env),\n  either.fold(\n    (errors) => {\n      throw new Error(failure(errors).join(\"\\n\"));\n    },\n    (env): BuildConfig => ({\n      basepath: env.REACT_APP_BASEPATH,\n    })\n  )\n);\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { IntlProvider } from \"./IntlProvider\";\nimport { StrictMode } from \"react\";\nimport { BuildConfigProvider } from \"./ConfigProvider\";\nimport { buildConfig } from \"./config\";\n\nconst locale = \"it\";\n\nReactDOM.render(\n  <StrictMode>\n    <BuildConfigProvider {...buildConfig}>\n      <IntlProvider locale={locale}>\n        <App />\n      </IntlProvider>\n    </BuildConfigProvider>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}