{"version":3,"sources":["routing.ts","Router/RouterProvider.tsx","Pages/Home.tsx","domain.ts","Icons/DarkAuraIcon.tsx","Icons/MysticalIcon.tsx","blocks/Common/RoleCard.tsx","utils.ts","Pages/Roles.tsx","App.tsx","reportWebVitals.ts","blocks/Waiting.tsx","IntlProvider.tsx","index.tsx"],"names":["home","_tag","roles","game","players","locations","defaults","end","rolesMatch","lit","then","gameMatch","playersMatch","router","zero","alt","parser","map","routing","formatLocation","l","format","formatter","parseLocation","s","parse","Route","RouterContext","createContext","option","none","RouterProvider","props","useState","window","location","pathname","setLocation","handleLocationChanges","useEffect","addEventListener","removeEventListener","Provider","value","some","children","useRouter","ctx","useContext","isNone","Error","current","navigateTo","newLocation","history","pushState","scrollTo","back","initializeRouter","Home","Box","display","width","flexDirection","alignItems","Button","variant","color","onClick","id","primaryWolf","aura","mystical","faction","secondaryWolf","youngWolf","traitor","seer","wizard","medium","witch","healer","farmer","innkeeper","bard","monk","heremit","priest","sinner","madman","jester","factions","pipe","record","toArray","array","uniq","S","DarkAuraIcon","SvgIcon","d","MysticalIcon","RoleCard","formatMessage","useIntl","formatName","roleId","formatDescription","useFormatRole","Grid","item","xs","sm","md","lg","Card","CardContent","Typography","gutterBottom","role","Roles","formatFaction","useFormatFaction","AppBar","position","Toolbar","IconButton","edge","aria-label","f","Accordion","AccordionSummary","expandIcon","m","container","direction","spacing","justifyContent","filter","r","App","matches","constant","Game","Players","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Waiting","height","CircularProgress","IntlProvider","messages","setMessages","locale","taskEither","tryCatch","default","identity","fold","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79584bb3.chunk.js","sourcesContent":["import { end, format, lit, parse, Route, zero } from \"fp-ts-routing\";\nimport { initializeRouter, Routing } from \"./Router/RouterProvider\";\n\ninterface Home {\n  readonly _tag: \"Home\";\n}\n\ninterface Roles {\n  readonly _tag: \"Roles\";\n}\n\ninterface Game {\n  readonly _tag: \"Game\";\n}\n\ninterface Players {\n  readonly _tag: \"Players\";\n}\n\nexport type Location = Home | Roles | Game | Players;\n\nconst home: Home = { _tag: \"Home\" };\nconst roles: Roles = { _tag: \"Roles\" };\nconst game: Game = { _tag: \"Game\" };\nconst players: Players = { _tag: \"Players\" };\n\nexport const locations = {\n  home,\n  roles,\n  game,\n  players,\n};\n\nconst defaults = end;\nconst rolesMatch = lit(\"roles\").then(end);\nconst gameMatch = lit(\"game\").then(end);\nconst playersMatch = lit(\"players\").then(end);\n\nconst router = zero<Location>()\n  .alt(defaults.parser.map(() => home))\n  .alt(rolesMatch.parser.map(() => roles))\n  .alt(gameMatch.parser.map(() => game))\n  .alt(playersMatch.parser.map(() => players));\n\nfunction parseLocation(s: string): Location {\n  return parse(router, Route.parse(s), home);\n}\n\nfunction formatLocation(l: Location): string {\n  switch (l._tag) {\n    case \"Home\":\n      return format(defaults.formatter, l);\n    case \"Roles\":\n      return format(rolesMatch.formatter, l);\n    case \"Game\":\n      return format(gameMatch.formatter, l);\n    case \"Players\":\n      return format(playersMatch.formatter, l);\n  }\n}\n\nexport const routing: Routing<Location> = {\n  formatLocation,\n  parseLocation,\n};\n\nexport const { RouterProvider, useRouter } = initializeRouter<Location>();\n","import {\n  createContext,\n  useEffect,\n  useState,\n  useContext,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\nimport { Option } from \"fp-ts/Option\";\nimport { option } from \"fp-ts\";\n\ninterface ILocation {\n  readonly _tag: string;\n}\n\ninterface ILocationFoldable<K extends string> {\n  readonly _tag: K;\n}\n\nexport function foldLocation<\n  K extends string,\n  T extends ILocationFoldable<K>,\n  R\n>(\n  matches: {\n    [L in T[\"_tag\"]]: (args: Omit<Extract<T, { _tag: L }>, \"_tag\">) => R;\n  }\n): (location: T) => R {\n  return (location) => matches[location._tag](location as any);\n}\n\nexport type Routing<T extends ILocation> = {\n  formatLocation: (l: T) => string;\n  parseLocation: (s: string) => T;\n};\n\ntype Props<T extends ILocation> = {\n  routing: Routing<T>;\n  children: JSX.Element;\n};\n\nexport function initializeRouter<T extends ILocation>() {\n  const RouterContext = createContext<\n    Option<{\n      routing: Routing<T>;\n      location: T;\n      setLocation: Dispatch<SetStateAction<T>>;\n    }>\n  >(option.none);\n\n  const RouterProvider = (props: Props<T>) => {\n    const [location, setLocation] = useState(\n      props.routing.parseLocation(window.location.pathname)\n    );\n\n    const handleLocationChanges = () => {\n      setLocation(props.routing.parseLocation(window.location.pathname));\n    };\n\n    useEffect(() => {\n      window.addEventListener(\"popstate\", handleLocationChanges);\n\n      return () => {\n        window.removeEventListener(\"popstate\", handleLocationChanges);\n      };\n    });\n\n    return (\n      <RouterContext.Provider\n        value={option.some({ routing: props.routing, location, setLocation })}\n      >\n        {props.children}\n      </RouterContext.Provider>\n    );\n  };\n\n  const useRouter = () => {\n    const ctx = useContext(RouterContext);\n\n    if (option.isNone(ctx)) {\n      throw new Error(\"RouterContext not provided\");\n    }\n\n    const navigateTo = (location: T) => {\n      const newLocation = ctx.value.routing.formatLocation(location);\n      window.history.pushState(null, \"\", newLocation);\n      window.scrollTo(0, 0);\n      ctx.value.setLocation(location);\n    };\n\n    const back = () => {\n      window.history.back();\n    };\n\n    return { current: ctx.value.location, navigateTo, back };\n  };\n\n  return { RouterProvider, useRouter };\n}\n","import { Box, Button } from \"@material-ui/core\";\nimport { FormattedMessage } from \"react-intl\";\nimport { locations, useRouter } from \"../routing\";\n\nexport function Home() {\n  const router = useRouter();\n\n  return (\n    <Box display=\"flex\" width={1} flexDirection=\"column\" alignItems=\"center\">\n      <h1>Welcome</h1>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => router.navigateTo(locations.roles)}\n      >\n        <FormattedMessage id=\"role\" />\n      </Button>\n    </Box>\n  );\n}\n","import { array, record } from \"fp-ts\";\nimport * as S from \"fp-ts/string\";\nimport { pipe } from \"fp-ts/function\";\n\nexport interface Role {\n  readonly id: RoleId;\n  readonly aura: Aura;\n  readonly mystical: boolean;\n  readonly faction: Faction;\n}\n\nconst primaryWolf: Role = {\n  id: \"primaryWolf\",\n  aura: \"dark\",\n  mystical: false,\n  faction: \"wolf\",\n};\nconst secondaryWolf: Role = {\n  id: \"secondaryWolf\",\n  aura: \"dark\",\n  mystical: false,\n  faction: \"wolf\",\n};\nconst youngWolf: Role = {\n  id: \"youngWolf\",\n  aura: \"dark\",\n  mystical: false,\n  faction: \"wolf\",\n};\nconst traitor: Role = {\n  id: \"traitor\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"wolf\",\n};\nconst seer: Role = {\n  id: \"seer\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n};\nconst wizard: Role = {\n  id: \"wizard\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n};\nconst medium: Role = {\n  id: \"medium\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n};\nconst witch: Role = {\n  id: \"witch\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n};\nconst healer: Role = {\n  id: \"healer\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n};\nconst farmer: Role = {\n  id: \"farmer\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n};\nconst innkeeper: Role = {\n  id: \"innkeeper\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n};\nconst bard: Role = {\n  id: \"bard\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n};\nconst monk: Role = {\n  id: \"monk\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n};\nconst heremit: Role = {\n  id: \"heremit\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n};\nconst priest: Role = {\n  id: \"priest\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n};\nconst sinner: Role = {\n  id: \"sinner\",\n  aura: \"dark\",\n  mystical: false,\n  faction: \"village\",\n};\nconst madman: Role = {\n  id: \"madman\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"general\",\n};\nconst jester: Role = {\n  id: \"jester\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"general\",\n};\n\nexport const roles = {\n  primaryWolf,\n  secondaryWolf,\n  youngWolf,\n  traitor,\n  seer,\n  wizard,\n  medium,\n  witch,\n  healer,\n  farmer,\n  innkeeper,\n  bard,\n  monk,\n  heremit,\n  priest,\n  sinner,\n  madman,\n  jester,\n};\n\nexport type RoleId =\n  | \"primaryWolf\"\n  | \"secondaryWolf\"\n  | \"youngWolf\"\n  | \"traitor\"\n  | \"seer\"\n  | \"wizard\"\n  | \"medium\"\n  | \"witch\"\n  | \"healer\"\n  | \"farmer\"\n  | \"innkeeper\"\n  | \"bard\"\n  | \"monk\"\n  | \"heremit\"\n  | \"priest\"\n  | \"sinner\"\n  | \"madman\"\n  | \"jester\";\n\nexport type Faction = \"village\" | \"general\" | \"wolf\";\n\nexport type Aura = \"light\" | \"dark\";\n\nexport const factions = pipe(\n  roles,\n  record.toArray,\n  array.map(([, r]) => r.faction),\n  array.uniq<Faction>(S.Eq)\n);\n","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\n\nexport function DarkAuraIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12 1.5c-5.398 0-9.75 4.352-9.75 9.602v4.273a2.53 2.53 0 002.55 2.55c.45 0 1.2.223 1.2.825V21c0 .3.227.602.523.75 1.801.602 3.676.898 5.477.898 1.8 0 3.676-.296 5.477-.898.296-.074.523-.375.523-.75v-2.25c0-.602.75-.824 1.2-.824a2.53 2.53 0 002.55-2.551v-4.273c0-5.25-4.352-9.602-9.75-9.602zM9.227 16.273l-.903.153c-.148 0-.3.074-.523.074-.602 0-1.125-.227-1.653-.602a2.666 2.666 0 01-.898-1.949v-.148A2.53 2.53 0 017.8 11.25h.9c.823 0 1.5.375 2.027.977.449.597.671 1.421.449 2.171-.227.977-1.051 1.653-1.95 1.875zm3.824 1.653c-.074.074-.153.074-.301.074-.3 0-.523-.148-.676-.45L12 17.399l-.074.153c-.153.375-.602.523-.977.3-.375-.152-.523-.601-.3-.976l.75-1.5c.226-.523 1.05-.523 1.351 0l.75 1.5c.074.375-.074.824-.45 1.05zm5.699-3.977c0 .75-.375 1.5-.898 1.95a2.632 2.632 0 01-1.653.601c-.148 0-.3 0-.523-.074l-.903-.153c-.972-.222-1.722-.898-1.949-1.875-.222-.75 0-1.574.45-2.171.453-.602 1.203-.977 2.027-.977h.898a2.53 2.53 0 012.551 2.55zm0 0\"></path>\n    </SvgIcon>\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\n\nexport function MysticalIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <g>\n        <path d=\"M23.887 11.586c-.192-.316-4.742-7.75-11.887-7.75-7.145 0-11.695 7.434-11.887 7.75a.807.807 0 000 .828c.192.316 4.742 7.75 11.887 7.75 7.145 0 11.695-7.434 11.887-7.75a.807.807 0 000-.828zM12 18.559c-5.336 0-9.21-5.063-10.238-6.559C2.789 10.5 6.652 5.441 12 5.441c5.336 0 9.21 5.063 10.238 6.559-1.027 1.5-4.89 6.559-10.238 6.559zm0 0\"></path>\n        <path d=\"M12 6.598A5.406 5.406 0 006.598 12 5.409 5.409 0 0012 17.402 5.411 5.411 0 0017.402 12 5.406 5.406 0 0012 6.598zm0 9.199A3.801 3.801 0 018.203 12c0-2.094 1.703-3.8 3.797-3.8a3.804 3.804 0 013.797 3.8A3.801 3.801 0 0112 15.797zm0 0\"></path>\n        <path d=\"M12 9.93c-1.145 0-2.07.925-2.07 2.07 0 1.145.925 2.07 2.07 2.07 1.145 0 2.07-.925 2.07-2.07 0-1.145-.925-2.07-2.07-2.07zm0 0\"></path>\n      </g>\n    </SvgIcon>\n  );\n}\n","import { Box, Card, CardContent, Grid, Typography } from \"@material-ui/core\";\nimport { Role } from \"../../domain\";\nimport { DarkAuraIcon } from \"../../Icons/DarkAuraIcon\";\nimport { MysticalIcon } from \"../../Icons/MysticalIcon\";\nimport { useFormatRole } from \"../../utils\";\n\ntype Props = {\n  role: Role;\n};\n\nexport function RoleCard(props: Props) {\n  const { formatName, formatDescription } = useFormatRole();\n  return (\n    <Grid item xs={12} sm={6} md={4} lg={3}>\n      <Card>\n        <CardContent>\n          <Box display=\"flex\" width={1} flexDirection=\"row\">\n            <Box display=\"flex\" width={1}>\n              <Typography gutterBottom variant=\"h5\">\n                {formatName(props.role.id)}\n              </Typography>\n            </Box>\n            <Box display=\"flex\" alignItems=\"center\">\n              {props.role.aura === \"dark\" && <DarkAuraIcon />}\n              {props.role.mystical && <MysticalIcon />}\n            </Box>\n          </Box>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {formatDescription(props.role.id)}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}\n","import { useIntl } from \"react-intl\";\nimport { Faction, RoleId } from \"./domain\";\n\nexport function useFormatRole(): {\n  formatName: (roleId: RoleId) => string;\n  formatDescription: (roleId: RoleId) => string;\n} {\n  const { formatMessage } = useIntl();\n\n  const formatName = (roleId: RoleId) => {\n    switch (roleId) {\n      case \"primaryWolf\":\n        return formatMessage({ id: \"role.primaryWolf.name\" });\n      case \"secondaryWolf\":\n        return formatMessage({ id: \"role.secondaryWolf.name\" });\n      case \"youngWolf\":\n        return formatMessage({ id: \"role.youngWolf.name\" });\n      case \"traitor\":\n        return formatMessage({ id: \"role.traitor.name\" });\n      case \"seer\":\n        return formatMessage({ id: \"role.seer.name\" });\n      case \"wizard\":\n        return formatMessage({ id: \"role.wizard.name\" });\n      case \"medium\":\n        return formatMessage({ id: \"role.medium.name\" });\n      case \"witch\":\n        return formatMessage({ id: \"role.witch.name\" });\n      case \"healer\":\n        return formatMessage({ id: \"role.healer.name\" });\n      case \"farmer\":\n        return formatMessage({ id: \"role.farmer.name\" });\n      case \"innkeeper\":\n        return formatMessage({ id: \"role.innkeeper.name\" });\n      case \"bard\":\n        return formatMessage({ id: \"role.bard.name\" });\n      case \"monk\":\n        return formatMessage({ id: \"role.monk.name\" });\n      case \"heremit\":\n        return formatMessage({ id: \"role.heremit.name\" });\n      case \"priest\":\n        return formatMessage({ id: \"role.priest.name\" });\n      case \"sinner\":\n        return formatMessage({ id: \"role.sinner.name\" });\n      case \"madman\":\n        return formatMessage({ id: \"role.madman.name\" });\n      case \"jester\":\n        return formatMessage({ id: \"role.jester.name\" });\n    }\n  };\n\n  const formatDescription = (roleId: RoleId) => {\n    switch (roleId) {\n      case \"primaryWolf\":\n        return formatMessage({ id: \"role.primaryWolf.description\" });\n      case \"secondaryWolf\":\n        return formatMessage({ id: \"role.secondaryWolf.description\" });\n      case \"youngWolf\":\n        return formatMessage({ id: \"role.youngWolf.description\" });\n      case \"traitor\":\n        return formatMessage({ id: \"role.traitor.description\" });\n      case \"seer\":\n        return formatMessage({ id: \"role.seer.description\" });\n      case \"wizard\":\n        return formatMessage({ id: \"role.wizard.description\" });\n      case \"medium\":\n        return formatMessage({ id: \"role.medium.description\" });\n      case \"witch\":\n        return formatMessage({ id: \"role.witch.description\" });\n      case \"healer\":\n        return formatMessage({ id: \"role.healer.description\" });\n      case \"farmer\":\n        return formatMessage({ id: \"role.farmer.description\" });\n      case \"innkeeper\":\n        return formatMessage({ id: \"role.innkeeper.description\" });\n      case \"bard\":\n        return formatMessage({ id: \"role.bard.description\" });\n      case \"monk\":\n        return formatMessage({ id: \"role.monk.description\" });\n      case \"heremit\":\n        return formatMessage({ id: \"role.heremit.description\" });\n      case \"priest\":\n        return formatMessage({ id: \"role.priest.description\" });\n      case \"sinner\":\n        return formatMessage({ id: \"role.sinner.description\" });\n      case \"madman\":\n        return formatMessage({ id: \"role.madman.description\" });\n      case \"jester\":\n        return formatMessage({ id: \"role.jester.description\" });\n    }\n  };\n\n  return { formatName, formatDescription };\n}\n\nexport function useFormatFaction(): (faction: Faction) => string {\n  const { formatMessage } = useIntl();\n\n  const formatFaction = (faction: Faction) => {\n    switch (faction) {\n      case \"general\":\n        return formatMessage({ id: \"faction.general\" });\n      case \"wolf\":\n        return formatMessage({ id: \"faction.wolf\" });\n      case \"village\":\n        return formatMessage({ id: \"faction.village\" });\n    }\n  };\n\n  return formatFaction;\n}\n","import {\n  Accordion,\n  AccordionSummary,\n  AppBar,\n  Box,\n  Grid,\n  IconButton,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport ArrowBackSharp from \"@material-ui/icons/ArrowBackSharp\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { FormattedMessage } from \"react-intl\";\nimport { locations, useRouter } from \"../routing\";\nimport { Faction, factions, roles } from \"../domain\";\nimport { pipe } from \"fp-ts/function\";\nimport { array, record } from \"fp-ts\";\nimport { useFormatFaction } from \"../utils\";\nimport { RoleCard } from \"../blocks/Common/RoleCard\";\n\nexport function Roles() {\n  const router = useRouter();\n  const formatFaction = useFormatFaction();\n\n  return (\n    <Box display=\"flex\" width={1} flexDirection=\"column\" alignItems=\"center\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => router.navigateTo(locations.home)}\n          >\n            <ArrowBackSharp />\n          </IconButton>\n          <Box display=\"flex\" width={1}>\n            <Typography variant=\"h6\">\n              <FormattedMessage id=\"role\" />\n            </Typography>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Box display=\"flex\" width={1} flexDirection=\"column\" alignItems=\"center\">\n        {pipe(\n          factions,\n          array.map((f: Faction) => (\n            <Accordion key={f}>\n              <AccordionSummary expandIcon={<ExpandMore />}>\n                <Typography>{formatFaction(f)}</Typography>\n              </AccordionSummary>\n              <Box m={2}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  spacing={2}\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  {pipe(\n                    roles,\n                    record.filter((r) => r.faction === f),\n                    record.toArray,\n                    array.map(([, r]) => <RoleCard role={r} />)\n                  )}\n                </Grid>\n              </Box>\n            </Accordion>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { pipe, constant } from \"fp-ts/function\";\nimport \"./App.css\";\nimport { Home } from \"./Pages/Home\";\nimport { Roles } from \"./Pages/Roles\";\nimport { foldLocation } from \"./Router/RouterProvider\";\nimport { useRouter } from \"./routing\";\n\nfunction App(): JSX.Element {\n  const router = useRouter();\n\n  return pipe(\n    router.current,\n    foldLocation({\n      Home: constant(<Home />),\n      Roles: constant(<Roles />),\n      Game: constant(<div></div>),\n      Players: constant(<div></div>),\n    })\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Box, CircularProgress } from \"@material-ui/core\";\n\nexport function Waiting() {\n  return (\n    <Box\n      display=\"flex\"\n      width={1}\n      height={1}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <CircularProgress />\n    </Box>\n  );\n}\n","import { option, taskEither } from \"fp-ts\";\nimport { identity } from \"io-ts\";\nimport { useEffect, useState } from \"react\";\nimport { Option } from \"fp-ts/Option\";\nimport { constant, pipe } from \"fp-ts/function\";\nimport { IntlProvider as InternalIntlProvider } from \"react-intl\";\nimport { Waiting } from \"./blocks/Waiting\";\n\ntype Locale = \"it\";\n\ntype Props = {\n  children: JSX.Element;\n  locale: Locale;\n};\n\nfunction loadLocaleData(locale: Locale) {\n  return taskEither.tryCatch(() => {\n    switch (locale) {\n      case \"it\":\n        return import(\"./messages/it.json\").then((messages) => ({\n          ...messages.default,\n        }));\n    }\n  }, identity);\n}\n\nexport function IntlProvider(props: Props) {\n  const [messages, setMessages] = useState<Option<Record<string, string>>>(\n    option.none\n  );\n\n  useEffect(() => {\n    pipe(\n      loadLocaleData(props.locale),\n      taskEither.map((messages) => setMessages(option.some(messages)))\n    )();\n  }, [props.locale]);\n\n  return pipe(\n    messages,\n    option.fold(constant(<Waiting />), (messages) => (\n      <InternalIntlProvider messages={messages} locale={props.locale}>\n        {props.children}\n      </InternalIntlProvider>\n    ))\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { IntlProvider } from \"./IntlProvider\";\nimport { RouterProvider, routing } from \"./routing\";\nimport { StrictMode } from \"react\";\n\nconst locale = \"it\";\n\nReactDOM.render(\n  <StrictMode>\n    <IntlProvider locale={locale}>\n      <RouterProvider routing={routing}>\n        <App />\n      </RouterProvider>\n    </IntlProvider>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}