{"version":3,"sources":["ConfigProvider.tsx","blocks/Common/ConfirmationDialog.tsx","domain.ts","localStorage.ts","blocks/SelectPlayers.tsx","Icons/DarkAuraIcon.tsx","Icons/MysticalIcon.tsx","blocks/RoleCard.tsx","utils.ts","blocks/ShowRole.tsx","routing.ts","Router/RouterProvider.tsx","gameplay.ts","Pages/GameState.ts","Pages/Game.tsx","Pages/Home.tsx","blocks/PlayerCard.tsx","Form/TextField.tsx","Form/validators.ts","blocks/PlayerForm.tsx","Pages/Players.tsx","useLocalStorageState.ts","Pages/Roles.tsx","App.tsx","reportWebVitals.ts","blocks/Common/Waiting.tsx","IntlProvider.tsx","config.ts","index.tsx"],"names":["BuildConfigContext","createContext","option","none","BuildConfigProvider","basepath","children","Provider","value","some","ConfirmationDialog","props","Dialog","open","onClose","onCancel","DialogTitle","id","title","DialogContent","DialogContentText","content","DialogActions","Button","autoFocus","onClick","color","cancelLabel","onConfirm","confirmLabel","roles","primaryWolf","aura","mystical","faction","fitness","secondaryWolf","youngWolf","traitor","seer","wizard","medium","witch","healer","farmer1","farmer2","innkeeper","bard","monk","heremit","priest","sinner","madman","jester","RoleId","t","farmer","factions","pipe","record","toArray","array","map","uniq","S","Player","name","NonEmptyString","PlayerRole","player","roleId","Phase","showRole","GameData","phase","playersRole","getValue","key","codec","localStorage","getItem","fromNullable","chain","flow","json","parse","either","mapLeft","e","console","error","chainW","decode","failure","join","fromEither","setValue","encode","stringify","bimap","encodedValue","setItem","SelectPlayers","useState","players","p","selected","setPlayers","amount","filter","v","length","getOrElse","constant","Box","display","width","flexDirection","m","Typography","variant","values","minAmount","fold","Grid","container","justifyContent","alignItems","spacing","item","xs","sm","md","lg","Chip","label","avatar","Avatar","clickable","findIndex","index","modifyAt","onNext","filterMap","disabled","DarkAuraIcon","SvgIcon","d","MysticalIcon","RoleCard","formatMessage","useIntl","formatName","formatDescription","useFormatRole","Card","CardContent","gutterBottom","role","ShowRole","setIndex","currentPlayerRole","playerRoles","lookup","minLimit","maxLimit","mt","playerRole","mb","onStartGame","home","_tag","game","locations","defaults","end","rolesMatch","lit","then","gameMatch","playersMatch","router","zero","alt","parser","routing","formatLocation","l","format","formatter","parseLocation","s","Route","RouterContext","RouterProvider","skipN","b","split","pathname","useHashHistory","window","location","search","hash","string","replace","getPathname","nonEmptyArray","fromReadonlyNonEmptyArray","dropLeft","setLocation","handleLocationChanges","useEffect","addEventListener","removeEventListener","internalRouting","useRouter","ctx","useContext","isNone","Error","current","navigateTo","newLocation","log","history","pushState","scrollTo","back","initializeRouter","shuffle","temporaryValue","randomIndex","currentIndex","shuffleArray","Math","floor","random","fitnessShuffle","getFitness","collection","startIndex","totalFitness","reduceWithIndex","i","a","slice","fitnessSoFar","reducer","_state","action","type","view","wolfNumber","shuffledPlayers","pop","push","wolfRoles","otherRoles","r","findFirst","wr","assignRoleToPlayers","payload","Game","match","useReducer","gameData","state","dispatch","AppBar","position","Toolbar","IconButton","edge","aria-label","ArrowBackSharp","whenInit","_gameData","removeItem","whenSelectPlayers","whenShowRole","Home","direction","fullWidth","PlayerCard","deleteDialogOpen","setDeleteDialogOpen","CardMedia","CardActions","disableSpacing","onDelete","TextField","defaultValue","placeholder","onChange","currentTarget","onBlur","issues","isSome","helperText","head","toNullable","useValidators","errorMessage","intl","nonBlankString","validators","validator","fromPredicate","trim","uniqueString","defined","definedNoExtract","PlayerForm","useFormo","initialValues","fieldValidators","inParallel","playerNames","onSubmit","taskEither","fromIO","fieldProps","handleSubmit","useStyles","makeStyles","theme","createStyles","fab","bottom","right","Players","classes","initValues","reactState","setReactState","useLocalStorageState","playerFormOpen","setPlayerFormOpen","Fab","className","Roles","formatFaction","useFormatFaction","f","Accordion","AccordionSummary","expandIcon","InternalApp","matches","App","buildConfig","useBuildConfigContext","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Waiting","height","CircularProgress","IntlProvider","messages","setMessages","locale","tryCatch","default","identity","BuildConfigCodec","REACT_APP_BASEPATH","optionFromNullable","process","errors","env","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55979a9c.chunk.js","sourcesContent":["import { option } from \"fp-ts\";\nimport { createContext, useContext } from \"react\";\nimport { Option } from \"fp-ts/Option\";\nimport { BuildConfig } from \"./config\";\n\nexport const BuildConfigContext = createContext<Option<BuildConfig>>(\n  option.none\n);\n\ntype Props = BuildConfig & {\n  children: JSX.Element;\n};\n\nexport function BuildConfigProvider({ basepath, children }: Props) {\n  return (\n    <BuildConfigContext.Provider value={option.some({ basepath })}>\n      {children}\n    </BuildConfigContext.Provider>\n  );\n}\n\nexport function useBuildConfigContext() {\n  const ctx = useContext(BuildConfigContext);\n\n  if (option.isNone(ctx)) {\n    throw new Error(\"BuildConfigContext not provided\");\n  }\n\n  return ctx.value;\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { IO } from \"fp-ts/IO\";\nimport { FormattedMessage } from \"react-intl\";\n\ntype Props = {\n  open: boolean;\n  title: string;\n  content: string;\n  onConfirm: IO<void>;\n  onCancel: IO<void>;\n  confirmLabel?: string;\n  cancelLabel?: string;\n};\n\nexport function ConfirmationDialog(props: Props) {\n  return (\n    <Dialog open={props.open} onClose={props.onCancel}>\n      <DialogTitle>\n        <FormattedMessage id={props.title} />\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <FormattedMessage id={props.content} />\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={props.onCancel} color=\"primary\">\n          <FormattedMessage\n            id={props.cancelLabel ? props.cancelLabel : \"cancel\"}\n          />\n        </Button>\n        <Button onClick={props.onConfirm} color=\"primary\">\n          <FormattedMessage\n            id={props.confirmLabel ? props.confirmLabel : \"ok\"}\n          />\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { array, record } from \"fp-ts\";\nimport * as S from \"fp-ts/string\";\nimport { pipe } from \"fp-ts/function\";\nimport * as t from \"io-ts\";\nimport { NonEmptyString } from \"io-ts-types/NonEmptyString\";\n\nexport interface Role {\n  readonly id: RoleId;\n  readonly aura: Aura;\n  readonly mystical: boolean;\n  readonly faction: Faction;\n  readonly fitness: number;\n}\n\nconst primaryWolf: Role = {\n  id: \"primaryWolf\",\n  aura: \"dark\",\n  mystical: false,\n  faction: \"wolf\",\n  fitness: 100,\n};\nconst secondaryWolf: Role = {\n  id: \"secondaryWolf\",\n  aura: \"dark\",\n  mystical: false,\n  faction: \"wolf\",\n  fitness: 75,\n};\nconst youngWolf: Role = {\n  id: \"youngWolf\",\n  aura: \"dark\",\n  mystical: false,\n  faction: \"wolf\",\n  fitness: 50,\n};\nconst traitor: Role = {\n  id: \"traitor\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"wolf\",\n  fitness: 30,\n};\nconst seer: Role = {\n  id: \"seer\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n  fitness: 100,\n};\nconst wizard: Role = {\n  id: \"wizard\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n  fitness: 30,\n};\nconst medium: Role = {\n  id: \"medium\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n  fitness: 30,\n};\nconst witch: Role = {\n  id: \"witch\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n  fitness: 50,\n};\nconst healer: Role = {\n  id: \"healer\",\n  aura: \"light\",\n  mystical: true,\n  faction: \"village\",\n  fitness: 40,\n};\nconst farmer1: Role = {\n  id: \"farmer\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n  fitness: 200,\n};\nconst farmer2: Role = {\n  id: \"farmer\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n  fitness: 200,\n};\nconst innkeeper: Role = {\n  id: \"innkeeper\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n  fitness: 50,\n};\nconst bard: Role = {\n  id: \"bard\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n  fitness: 50,\n};\nconst monk: Role = {\n  id: \"monk\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n  fitness: 20,\n};\nconst heremit: Role = {\n  id: \"heremit\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n  fitness: 20,\n};\nconst priest: Role = {\n  id: \"priest\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"village\",\n  fitness: 40,\n};\nconst sinner: Role = {\n  id: \"sinner\",\n  aura: \"dark\",\n  mystical: false,\n  faction: \"village\",\n  fitness: 40,\n};\nconst madman: Role = {\n  id: \"madman\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"general\",\n  fitness: 20,\n};\nconst jester: Role = {\n  id: \"jester\",\n  aura: \"light\",\n  mystical: false,\n  faction: \"general\",\n  fitness: 20,\n};\n\nexport const roles = {\n  primaryWolf,\n  secondaryWolf,\n  youngWolf,\n  traitor,\n  seer,\n  wizard,\n  medium,\n  witch,\n  healer,\n  farmer1,\n  farmer2,\n  innkeeper,\n  bard,\n  monk,\n  heremit,\n  priest,\n  sinner,\n  madman,\n  jester,\n};\n\nconst RoleId = t.keyof({\n  primaryWolf: true,\n  secondaryWolf: true,\n  youngWolf: true,\n  traitor: true,\n  seer: true,\n  wizard: true,\n  medium: true,\n  witch: true,\n  healer: true,\n  farmer: true,\n  innkeeper: true,\n  bard: true,\n  monk: true,\n  heremit: true,\n  priest: true,\n  sinner: true,\n  madman: true,\n  jester: true,\n});\nexport type RoleId = t.TypeOf<typeof RoleId>;\n\nexport type Faction = \"village\" | \"general\" | \"wolf\";\n\nexport type Aura = \"light\" | \"dark\";\n\nexport const factions = pipe(\n  roles,\n  record.toArray,\n  array.map(([, r]) => r.faction),\n  array.uniq<Faction>(S.Eq)\n);\n\nexport const Player = t.type({\n  name: NonEmptyString,\n});\nexport type Player = t.TypeOf<typeof Player>;\n\nconst PlayerRole = t.type({\n  player: Player,\n  roleId: RoleId,\n});\n\nconst Phase = t.keyof({\n  showRole: true,\n});\n\nexport const GameData = t.type({\n  phase: Phase,\n  playersRole: t.array(PlayerRole),\n});\nexport type GameData = t.TypeOf<typeof GameData>;\n","import { Type } from \"io-ts\";\nimport { Option } from \"fp-ts/Option\";\nimport { flow, pipe } from \"fp-ts/function\";\nimport { either, json, option } from \"fp-ts\";\nimport { failure } from \"io-ts/lib/PathReporter\";\nimport { Either } from \"fp-ts/Either\";\n\nexport function getValue<T, TT>(key: string, codec: Type<T, TT>): Option<T> {\n  return pipe(\n    localStorage.getItem(key),\n    option.fromNullable,\n    option.chain(\n      flow(\n        json.parse,\n        either.mapLeft((e) => {\n          console.error(\"Json parse error: \", e);\n          return e;\n        }),\n        either.chainW(\n          flow(\n            codec.decode,\n            either.mapLeft((e) => {\n              console.error(\"Decoding error: \", failure(e).join(\"\\n\"));\n              return e;\n            })\n          )\n        ),\n        option.fromEither\n      )\n    )\n  );\n}\n\nexport function setValue<T, TT>(\n  key: string,\n  codec: Type<T, TT>,\n  value: T\n): Either<unknown, void> {\n  return pipe(\n    value,\n    codec.encode,\n    json.stringify,\n    either.bimap(\n      (e) => {\n        console.error(e);\n        return e;\n      },\n      (encodedValue) => localStorage.setItem(key, encodedValue)\n    )\n  );\n}\n","import { Player } from \"../domain\";\nimport * as t from \"io-ts\";\nimport { getValue } from \"../localStorage\";\nimport { useState } from \"react\";\nimport { constant, pipe } from \"fp-ts/function\";\nimport { array, option } from \"fp-ts\";\nimport { Avatar, Box, Button, Chip, Grid, Typography } from \"@material-ui/core\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Reader } from \"fp-ts/Reader\";\n\ntype Props = {\n  onNext: Reader<Player[], void>;\n};\n\nconst minAmount = 4;\n\nexport function SelectPlayers(props: Props) {\n  const [players, setPlayers] = useState(\n    pipe(\n      getValue(\"players\", t.array(Player)),\n      option.map((players) =>\n        pipe(\n          players,\n          array.map((p) => ({ player: p, selected: false }))\n        )\n      )\n    )\n  );\n\n  const amount = pipe(\n    players,\n    option.map(\n      (p) =>\n        pipe(\n          p,\n          array.filter((v) => v.selected)\n        ).length\n    ),\n    option.getOrElse(constant(0))\n  );\n\n  return (\n    <Box display=\"flex\" width={1} flexDirection=\"column\" m={4}>\n      <Typography variant=\"h6\">\n        <FormattedMessage\n          id=\"game.players.playerNumber\"\n          values={{\n            amount,\n            minAmount,\n          }}\n        />\n      </Typography>\n      <Box display=\"flex\" width={1} flexDirection=\"column\" m={4}>\n        {pipe(\n          players,\n          option.fold(\n            constant(\n              <Typography variant=\"h3\">\n                <FormattedMessage id=\"game.players.noPlayersDefined\" />\n              </Typography>\n            ),\n            (players) => (\n              <Grid\n                container\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n              >\n                {players.map((value) => {\n                  return (\n                    <Grid\n                      key={value.player.name}\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                      container\n                      item\n                      xs={4}\n                      sm={3}\n                      md={2}\n                      lg={1}\n                    >\n                      <Chip\n                        label={value.player.name}\n                        avatar={<Avatar>{value.player.name[0]}</Avatar>}\n                        clickable\n                        color=\"primary\"\n                        onClick={() =>\n                          setPlayers(\n                            pipe(\n                              players,\n                              array.findIndex(\n                                (p) => p.player.name === value.player.name\n                              ),\n                              option.chain((index) =>\n                                pipe(\n                                  players,\n                                  array.modifyAt(index, (p) => ({\n                                    ...p,\n                                    selected: !p.selected,\n                                  }))\n                                )\n                              )\n                            )\n                          )\n                        }\n                        variant={value.selected ? \"default\" : \"outlined\"}\n                      />\n                    </Grid>\n                  );\n                })}\n              </Grid>\n            )\n          )\n        )}\n      </Box>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() =>\n          props.onNext(\n            pipe(\n              players,\n              option.map((players) =>\n                pipe(\n                  players,\n                  array.filterMap((p) =>\n                    p.selected ? option.some(p.player) : option.none\n                  )\n                )\n              ),\n              option.getOrElse<Player[]>(constant([]))\n            )\n          )\n        }\n        disabled={amount < minAmount}\n      >\n        <FormattedMessage id=\"next\" />\n      </Button>\n    </Box>\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\n\nexport function DarkAuraIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12 1.5c-5.398 0-9.75 4.352-9.75 9.602v4.273a2.53 2.53 0 002.55 2.55c.45 0 1.2.223 1.2.825V21c0 .3.227.602.523.75 1.801.602 3.676.898 5.477.898 1.8 0 3.676-.296 5.477-.898.296-.074.523-.375.523-.75v-2.25c0-.602.75-.824 1.2-.824a2.53 2.53 0 002.55-2.551v-4.273c0-5.25-4.352-9.602-9.75-9.602zM9.227 16.273l-.903.153c-.148 0-.3.074-.523.074-.602 0-1.125-.227-1.653-.602a2.666 2.666 0 01-.898-1.949v-.148A2.53 2.53 0 017.8 11.25h.9c.823 0 1.5.375 2.027.977.449.597.671 1.421.449 2.171-.227.977-1.051 1.653-1.95 1.875zm3.824 1.653c-.074.074-.153.074-.301.074-.3 0-.523-.148-.676-.45L12 17.399l-.074.153c-.153.375-.602.523-.977.3-.375-.152-.523-.601-.3-.976l.75-1.5c.226-.523 1.05-.523 1.351 0l.75 1.5c.074.375-.074.824-.45 1.05zm5.699-3.977c0 .75-.375 1.5-.898 1.95a2.632 2.632 0 01-1.653.601c-.148 0-.3 0-.523-.074l-.903-.153c-.972-.222-1.722-.898-1.949-1.875-.222-.75 0-1.574.45-2.171.453-.602 1.203-.977 2.027-.977h.898a2.53 2.53 0 012.551 2.55zm0 0\"></path>\n    </SvgIcon>\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\n\nexport function MysticalIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <g>\n        <path d=\"M23.887 11.586c-.192-.316-4.742-7.75-11.887-7.75-7.145 0-11.695 7.434-11.887 7.75a.807.807 0 000 .828c.192.316 4.742 7.75 11.887 7.75 7.145 0 11.695-7.434 11.887-7.75a.807.807 0 000-.828zM12 18.559c-5.336 0-9.21-5.063-10.238-6.559C2.789 10.5 6.652 5.441 12 5.441c5.336 0 9.21 5.063 10.238 6.559-1.027 1.5-4.89 6.559-10.238 6.559zm0 0\"></path>\n        <path d=\"M12 6.598A5.406 5.406 0 006.598 12 5.409 5.409 0 0012 17.402 5.411 5.411 0 0017.402 12 5.406 5.406 0 0012 6.598zm0 9.199A3.801 3.801 0 018.203 12c0-2.094 1.703-3.8 3.797-3.8a3.804 3.804 0 013.797 3.8A3.801 3.801 0 0112 15.797zm0 0\"></path>\n        <path d=\"M12 9.93c-1.145 0-2.07.925-2.07 2.07 0 1.145.925 2.07 2.07 2.07 1.145 0 2.07-.925 2.07-2.07 0-1.145-.925-2.07-2.07-2.07zm0 0\"></path>\n      </g>\n    </SvgIcon>\n  );\n}\n","import { Box, Card, CardContent, Typography } from \"@material-ui/core\";\nimport { Role } from \"../domain\";\nimport { DarkAuraIcon } from \"../Icons/DarkAuraIcon\";\nimport { MysticalIcon } from \"../Icons/MysticalIcon\";\nimport { useFormatRole } from \"../utils\";\n\ntype Props = {\n  role: Role;\n};\n\nexport function RoleCard(props: Props) {\n  const { formatName, formatDescription } = useFormatRole();\n  return (\n    <Card>\n      <CardContent>\n        <Box display=\"flex\" width={1} flexDirection=\"row\">\n          <Box display=\"flex\" width={1}>\n            <Typography gutterBottom variant=\"h5\">\n              {formatName(props.role.id)}\n            </Typography>\n          </Box>\n          <Box display=\"flex\" alignItems=\"center\">\n            {props.role.aura === \"dark\" && <DarkAuraIcon />}\n            {props.role.mystical && <MysticalIcon />}\n          </Box>\n        </Box>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {formatDescription(props.role.id)}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useIntl } from \"react-intl\";\nimport { Faction, RoleId } from \"./domain\";\n\nexport function useFormatRole(): {\n  formatName: (roleId: RoleId) => string;\n  formatDescription: (roleId: RoleId) => string;\n} {\n  const { formatMessage } = useIntl();\n\n  const formatName = (roleId: RoleId) => {\n    switch (roleId) {\n      case \"primaryWolf\":\n        return formatMessage({ id: \"role.primaryWolf.name\" });\n      case \"secondaryWolf\":\n        return formatMessage({ id: \"role.secondaryWolf.name\" });\n      case \"youngWolf\":\n        return formatMessage({ id: \"role.youngWolf.name\" });\n      case \"traitor\":\n        return formatMessage({ id: \"role.traitor.name\" });\n      case \"seer\":\n        return formatMessage({ id: \"role.seer.name\" });\n      case \"wizard\":\n        return formatMessage({ id: \"role.wizard.name\" });\n      case \"medium\":\n        return formatMessage({ id: \"role.medium.name\" });\n      case \"witch\":\n        return formatMessage({ id: \"role.witch.name\" });\n      case \"healer\":\n        return formatMessage({ id: \"role.healer.name\" });\n      case \"farmer\":\n        return formatMessage({ id: \"role.farmer.name\" });\n      case \"innkeeper\":\n        return formatMessage({ id: \"role.innkeeper.name\" });\n      case \"bard\":\n        return formatMessage({ id: \"role.bard.name\" });\n      case \"monk\":\n        return formatMessage({ id: \"role.monk.name\" });\n      case \"heremit\":\n        return formatMessage({ id: \"role.heremit.name\" });\n      case \"priest\":\n        return formatMessage({ id: \"role.priest.name\" });\n      case \"sinner\":\n        return formatMessage({ id: \"role.sinner.name\" });\n      case \"madman\":\n        return formatMessage({ id: \"role.madman.name\" });\n      case \"jester\":\n        return formatMessage({ id: \"role.jester.name\" });\n    }\n  };\n\n  const formatDescription = (roleId: RoleId) => {\n    switch (roleId) {\n      case \"primaryWolf\":\n        return formatMessage({ id: \"role.primaryWolf.description\" });\n      case \"secondaryWolf\":\n        return formatMessage({ id: \"role.secondaryWolf.description\" });\n      case \"youngWolf\":\n        return formatMessage({ id: \"role.youngWolf.description\" });\n      case \"traitor\":\n        return formatMessage({ id: \"role.traitor.description\" });\n      case \"seer\":\n        return formatMessage({ id: \"role.seer.description\" });\n      case \"wizard\":\n        return formatMessage({ id: \"role.wizard.description\" });\n      case \"medium\":\n        return formatMessage({ id: \"role.medium.description\" });\n      case \"witch\":\n        return formatMessage({ id: \"role.witch.description\" });\n      case \"healer\":\n        return formatMessage({ id: \"role.healer.description\" });\n      case \"farmer\":\n        return formatMessage({ id: \"role.farmer.description\" });\n      case \"innkeeper\":\n        return formatMessage({ id: \"role.innkeeper.description\" });\n      case \"bard\":\n        return formatMessage({ id: \"role.bard.description\" });\n      case \"monk\":\n        return formatMessage({ id: \"role.monk.description\" });\n      case \"heremit\":\n        return formatMessage({ id: \"role.heremit.description\" });\n      case \"priest\":\n        return formatMessage({ id: \"role.priest.description\" });\n      case \"sinner\":\n        return formatMessage({ id: \"role.sinner.description\" });\n      case \"madman\":\n        return formatMessage({ id: \"role.madman.description\" });\n      case \"jester\":\n        return formatMessage({ id: \"role.jester.description\" });\n    }\n  };\n\n  return { formatName, formatDescription };\n}\n\nexport function useFormatFaction(): (faction: Faction) => string {\n  const { formatMessage } = useIntl();\n\n  const formatFaction = (faction: Faction) => {\n    switch (faction) {\n      case \"general\":\n        return formatMessage({ id: \"faction.general\" });\n      case \"wolf\":\n        return formatMessage({ id: \"faction.wolf\" });\n      case \"village\":\n        return formatMessage({ id: \"faction.village\" });\n    }\n  };\n\n  return formatFaction;\n}\n","import { Box, Button, Grid, Typography } from \"@material-ui/core\";\nimport { array, option } from \"fp-ts\";\nimport { constant, pipe } from \"fp-ts/function\";\nimport { IO } from \"fp-ts/IO\";\nimport { useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Player, Role } from \"../domain\";\nimport { RoleCard } from \"./RoleCard\";\n\ntype Props = {\n  playerRoles: { player: Player; role: Role }[];\n  onStartGame: IO<void>;\n};\n\nexport function ShowRole(props: Props) {\n  const [index, setIndex] = useState(0);\n\n  const currentPlayerRole = pipe(props.playerRoles, array.lookup(index));\n\n  const minLimit = index === 0;\n  const maxLimit = index === props.playerRoles.length;\n\n  return (\n    <Box display=\"flex\" width={1} alignItems=\"center\" flexDirection=\"column\">\n      <Box mt={2}>\n        <Typography variant=\"h5\">\n          <FormattedMessage id=\"game.showRole.title\" />\n        </Typography>\n      </Box>\n      <Box mt={2}>\n        {pipe(\n          currentPlayerRole,\n          option.fold(\n            constant(\n              <Typography variant=\"h6\">\n                <FormattedMessage id=\"game.showRole.finish\" />\n              </Typography>\n            ),\n            (playerRole) => (\n              <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                <Box mb={2}>\n                  <Typography variant=\"h6\">{playerRole.player.name}</Typography>\n                </Box>\n                <Box display=\"flex\" width={1}>\n                  <RoleCard role={playerRole.role} />\n                </Box>\n              </Box>\n            )\n          )\n        )}\n      </Box>\n\n      <Box mt={2}>\n        <Grid container spacing={2}>\n          {!minLimit && (\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => (index > 0 ? setIndex(index - 1) : {})}\n              >\n                <FormattedMessage id=\"prev\" />\n              </Button>\n            </Grid>\n          )}\n          {!maxLimit && (\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => setIndex(index + 1)}\n              >\n                <FormattedMessage id=\"next\" />\n              </Button>\n            </Grid>\n          )}\n          {maxLimit && (\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={props.onStartGame}\n              >\n                <FormattedMessage id=\"start\" />\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n","import { end, format, lit, parse, Route, zero } from \"fp-ts-routing\";\nimport { initializeRouter, Routing } from \"./Router/RouterProvider\";\n\ninterface Home {\n  readonly _tag: \"Home\";\n}\n\ninterface Roles {\n  readonly _tag: \"Roles\";\n}\n\ninterface Game {\n  readonly _tag: \"Game\";\n}\n\ninterface Players {\n  readonly _tag: \"Players\";\n}\n\nexport type Location = Home | Roles | Game | Players;\n\nconst home: Home = { _tag: \"Home\" };\nconst roles: Roles = { _tag: \"Roles\" };\nconst game: Game = { _tag: \"Game\" };\nconst players: Players = { _tag: \"Players\" };\n\nexport const locations = {\n  home,\n  roles,\n  game,\n  players,\n};\n\nconst defaults = end;\nconst rolesMatch = lit(\"roles\").then(end);\nconst gameMatch = lit(\"game\").then(end);\nconst playersMatch = lit(\"players\").then(end);\n\nconst router = zero<Location>()\n  .alt(defaults.parser.map(() => home))\n  .alt(rolesMatch.parser.map(() => roles))\n  .alt(gameMatch.parser.map(() => game))\n  .alt(playersMatch.parser.map(() => players));\n\nfunction parseLocation(s: string): Location {\n  return parse(router, Route.parse(s), home);\n}\n\nfunction formatLocation(l: Location): string {\n  switch (l._tag) {\n    case \"Home\":\n      return format(defaults.formatter, l);\n    case \"Roles\":\n      return format(rolesMatch.formatter, l);\n    case \"Game\":\n      return format(gameMatch.formatter, l);\n    case \"Players\":\n      return format(playersMatch.formatter, l);\n  }\n}\n\nexport const routing: Routing<Location> = {\n  formatLocation,\n  parseLocation,\n};\n\nexport const { RouterProvider, useRouter } = initializeRouter<Location>();\n","import {\n  createContext,\n  useEffect,\n  useState,\n  useContext,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\nimport { Option } from \"fp-ts/Option\";\nimport { array, option, string, nonEmptyArray } from \"fp-ts\";\nimport { constant, pipe } from \"fp-ts/function\";\n\ninterface ILocation {\n  readonly _tag: string;\n}\n\ninterface ILocationFoldable<K extends string> {\n  readonly _tag: K;\n}\n\nexport function foldLocation<\n  K extends string,\n  T extends ILocationFoldable<K>,\n  R\n>(\n  matches: {\n    [L in T[\"_tag\"]]: (args: Omit<Extract<T, { _tag: L }>, \"_tag\">) => R;\n  }\n): (location: T) => R {\n  return (location) => matches[location._tag](location as any);\n}\n\nexport type Routing<T extends ILocation> = {\n  formatLocation: (l: T) => string;\n  parseLocation: (s: string) => T;\n};\n\ntype Props<T extends ILocation> = {\n  routing: Routing<T>;\n  basepath: Option<string>;\n  useHashHistory?: boolean;\n  children: JSX.Element;\n};\n\nexport function initializeRouter<T extends ILocation>() {\n  const RouterContext = createContext<\n    Option<{\n      routing: Routing<T>;\n      location: T;\n      setLocation: Dispatch<SetStateAction<T>>;\n    }>\n  >(option.none);\n\n  const RouterProvider = (props: Props<T>) => {\n    const skipN = pipe(\n      props.basepath,\n      option.map((b) => b.split(\"/\").length + 1),\n      option.getOrElse(constant(0))\n    );\n\n    const pathname = props.useHashHistory\n      ? pipe(\n          window.location.pathname +\n            window.location.search +\n            window.location.hash,\n          string.replace(\"#\", \"\")\n        )\n      : window.location.pathname;\n\n    const getPathname = () =>\n      pipe(\n        pathname,\n        string.split(\"/\"),\n        nonEmptyArray.fromReadonlyNonEmptyArray,\n        array.dropLeft(skipN)\n      ).join(\"/\");\n\n    const [location, setLocation] = useState(\n      props.routing.parseLocation(getPathname())\n    );\n\n    const handleLocationChanges = () => {\n      setLocation(props.routing.parseLocation(getPathname()));\n    };\n\n    useEffect(() => {\n      window.addEventListener(\"popstate\", handleLocationChanges);\n\n      return () => {\n        window.removeEventListener(\"popstate\", handleLocationChanges);\n      };\n    });\n\n    const formatLocation = (l: T) =>\n      pipe(\n        props.basepath,\n        option.map((b) => \"/\" + b),\n        option.getOrElse(constant(\"\"))\n      ) +\n      (props.useHashHistory ? \"/#\" : \"\") +\n      props.routing.formatLocation(l);\n\n    const internalRouting = {\n      parseLocation: props.routing.parseLocation,\n      formatLocation,\n    };\n\n    return (\n      <RouterContext.Provider\n        value={option.some({ routing: internalRouting, location, setLocation })}\n      >\n        {props.children}\n      </RouterContext.Provider>\n    );\n  };\n\n  const useRouter = () => {\n    const ctx = useContext(RouterContext);\n\n    if (option.isNone(ctx)) {\n      throw new Error(\"RouterContext not provided\");\n    }\n\n    const navigateTo = (location: T) => {\n      const newLocation = ctx.value.routing.formatLocation(location);\n      console.log(newLocation);\n      window.history.pushState(null, \"\", newLocation);\n      window.scrollTo(0, 0);\n      ctx.value.setLocation(location);\n    };\n\n    const back = () => {\n      window.history.back();\n    };\n\n    return { current: ctx.value.location, navigateTo, back };\n  };\n\n  return { RouterProvider, useRouter };\n}\n","import { array, option, record } from \"fp-ts\";\nimport { pipe } from \"fp-ts/function\";\nimport { Player, Role, roles } from \"./domain\";\n\nfunction shuffle<T>(array: T[]): T[] {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n  let shuffleArray = [...array];\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = shuffleArray[currentIndex];\n    shuffleArray[currentIndex] = shuffleArray[randomIndex];\n    shuffleArray[randomIndex] = temporaryValue;\n  }\n  return shuffleArray;\n}\n\nfunction fitnessShuffle<T>(\n  getFitness: (t: T) => number\n): (collection: T[]) => T[] {\n  return (collection: T[]): T[] => {\n    let currentIndex = 0;\n    let shuffleArray: T[] = [...collection];\n    while (currentIndex < shuffleArray.length) {\n      const startIndex = currentIndex;\n      const totalFitness = pipe(\n        shuffleArray,\n        array.reduceWithIndex(0, (i, a, b) =>\n          i >= startIndex ? a + getFitness(b) : a\n        )\n      );\n      const slice = Math.floor(Math.random() * totalFitness);\n\n      let fitnessSoFar = 0;\n      for (let i = currentIndex; i < shuffleArray.length; i++) {\n        fitnessSoFar += getFitness(shuffleArray[i]);\n        if (fitnessSoFar > slice) {\n          const t = shuffleArray[currentIndex];\n          shuffleArray[currentIndex] = shuffleArray[i];\n          shuffleArray[i] = t;\n        }\n      }\n      currentIndex += 1;\n    }\n    return shuffleArray;\n  };\n}\n\nexport function assignRoleToPlayers(\n  players: Player[]\n): { player: Player; role: Role }[] {\n  const wolfNumber = Math.floor(players.length / 4) - 1;\n\n  const shuffledPlayers = pipe(players, shuffle);\n\n  let playerRoles: { player: Player; role: Role }[] = [];\n  pipe(\n    shuffledPlayers.pop(),\n    option.fromNullable,\n    option.fold(\n      () => {},\n      (p) => playerRoles.push({ player: p, role: roles.primaryWolf })\n    )\n  );\n  pipe(\n    shuffledPlayers.pop(),\n    option.fromNullable,\n    option.fold(\n      () => {},\n      (p) => playerRoles.push({ player: p, role: roles.seer })\n    )\n  );\n\n  const wolfRoles = pipe(\n    [roles.secondaryWolf, roles.youngWolf, roles.traitor],\n    fitnessShuffle((t) => t.fitness)\n  );\n  for (let i = 0; i < wolfNumber; i++) {\n    pipe(\n      shuffledPlayers.pop(),\n      option.fromNullable,\n      option.fold(\n        () => {},\n        (p) => playerRoles.push({ player: p, role: wolfRoles[i] })\n      )\n    );\n  }\n\n  const otherRoles = pipe(\n    roles,\n    record.filter(\n      (r) =>\n        r.id !== \"seer\" &&\n        r.id !== \"primaryWolf\" &&\n        pipe(\n          wolfRoles,\n          array.findFirst((wr) => wr.id === r.id),\n          option.isNone\n        )\n    ),\n    record.toArray,\n    fitnessShuffle(([, t]) => t.fitness)\n  );\n\n  pipe(\n    shuffledPlayers,\n    array.map((p) =>\n      pipe(\n        otherRoles.pop(),\n        option.fromNullable,\n        option.fold(\n          () => {},\n          ([, r]) => playerRoles.push({ player: p, role: r })\n        )\n      )\n    )\n  );\n\n  return pipe(playerRoles, shuffle);\n}\n","import { array } from \"fp-ts\";\nimport { GameData, Player, Role } from \"../domain\";\nimport { assignRoleToPlayers } from \"../gameplay\";\nimport { setValue } from \"../localStorage\";\nimport { pipe } from \"fp-ts/function\";\n\nexport type State =\n  | {\n      view: \"init\";\n      gameData: GameData;\n    }\n  | {\n      view: \"selectPlayers\";\n    }\n  | { view: \"showRole\"; playerRoles: { player: Player; role: Role }[] };\n\ntype Action =\n  | { type: \"startFreshGame\" }\n  | {\n      type: \"assignRoleToPlayer\";\n      payload: Player[];\n    };\n\nexport function reducer(_state: State, action: Action): State {\n  switch (action.type) {\n    case \"startFreshGame\":\n      return { view: \"selectPlayers\" };\n    case \"assignRoleToPlayer\":\n      const playerRoles = assignRoleToPlayers(action.payload);\n      setValue(\"gameData\", GameData, {\n        phase: \"showRole\",\n        playersRole: pipe(\n          playerRoles,\n          array.map((v) => ({ player: v.player, roleId: v.role.id }))\n        ),\n      });\n      return {\n        view: \"showRole\",\n        playerRoles: playerRoles,\n      };\n  }\n}\n\nexport function foldStatus(match: {\n  whenInit: (gameData: GameData) => JSX.Element;\n  whenSelectPlayers: () => JSX.Element;\n  whenShowRole: (playerRoles: { player: Player; role: Role }[]) => JSX.Element;\n}): (state: State) => JSX.Element {\n  return (state) => {\n    switch (state.view) {\n      case \"init\":\n        return match.whenInit(state.gameData);\n      case \"selectPlayers\":\n        return match.whenSelectPlayers();\n      case \"showRole\":\n        return match.whenShowRole(state.playerRoles);\n    }\n  };\n}\n","import {\n  AppBar,\n  Box,\n  IconButton,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { ArrowBackSharp } from \"@material-ui/icons\";\nimport { option } from \"fp-ts\";\nimport { constant, pipe } from \"fp-ts/function\";\nimport { useReducer } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { ConfirmationDialog } from \"../blocks/Common/ConfirmationDialog\";\nimport { SelectPlayers } from \"../blocks/SelectPlayers\";\nimport { ShowRole } from \"../blocks/ShowRole\";\nimport { GameData } from \"../domain\";\nimport { getValue } from \"../localStorage\";\nimport { locations, useRouter } from \"../routing\";\nimport { foldStatus, reducer, State } from \"./GameState\";\n\nexport function Game() {\n  const router = useRouter();\n\n  const [state, dispatch] = useReducer(\n    reducer,\n    pipe(\n      getValue(\"gameData\", GameData),\n      option.fold<GameData, State>(\n        constant({ view: \"selectPlayers\" }),\n        (gameData) => ({\n          view: \"init\",\n          gameData: gameData,\n        })\n      )\n    )\n  );\n\n  return (\n    <Box display=\"flex\" width={1} flexDirection=\"column\" alignItems=\"center\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => router.navigateTo(locations.home)}\n          >\n            <ArrowBackSharp />\n          </IconButton>\n          <Box display=\"flex\" width={1}>\n            <Typography variant=\"h6\">\n              <FormattedMessage id=\"players\" />\n            </Typography>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Box\n        display=\"flex\"\n        m={2}\n        width={1}\n        flexDirection=\"row\"\n        alignItems=\"center\"\n      >\n        {pipe(\n          state,\n          foldStatus({\n            whenInit: (_gameData) => (\n              <ConfirmationDialog\n                open\n                title=\"game.resumeGame.title\"\n                content=\"game.resumeGame.content\"\n                onConfirm={() => {}}\n                onCancel={() => {\n                  localStorage.removeItem(\"gameData\");\n                  dispatch({ type: \"startFreshGame\" });\n                }}\n                confirmLabel=\"game.resumeGame.confirm\"\n                cancelLabel=\"game.resumeGame.cancel\"\n              />\n            ),\n            whenSelectPlayers: constant(\n              <SelectPlayers\n                onNext={(players) =>\n                  dispatch({ type: \"assignRoleToPlayer\", payload: players })\n                }\n              />\n            ),\n            whenShowRole: (playerRoles) => (\n              <ShowRole playerRoles={playerRoles} onStartGame={() => {}} />\n            ),\n          })\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { Box, Button, Grid, Typography } from \"@material-ui/core\";\nimport { FormattedMessage } from \"react-intl\";\nimport { locations, useRouter } from \"../routing\";\n\n//Bilanciamento ruoli 1 creatura oscura ogni 4 giocatori\n\nexport function Home() {\n  const router = useRouter();\n\n  return (\n    <Box display=\"flex\" width={1} flexDirection=\"column\" alignItems=\"center\">\n      <Typography variant=\"h1\">\n        <FormattedMessage id=\"appTitle\" />\n      </Typography>\n\n      <Box\n        mt={10}\n        width={1}\n        display=\"flex\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n      >\n        <Grid\n          container\n          item\n          xs={6}\n          direction=\"column\"\n          justifyContent=\"center\"\n          spacing={3}\n        >\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => router.navigateTo(locations.game)}\n              fullWidth\n            >\n              <FormattedMessage id=\"game\" />\n            </Button>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => router.navigateTo(locations.roles)}\n              fullWidth\n            >\n              <FormattedMessage id=\"role\" />\n            </Button>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => router.navigateTo(locations.players)}\n              fullWidth\n            >\n              <FormattedMessage id=\"players\" />\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Grid,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport { Player } from \"../domain\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { IO } from \"fp-ts//IO\";\nimport { useState } from \"react\";\nimport { ConfirmationDialog } from \"./Common/ConfirmationDialog\";\n\ntype Props = {\n  player: Player;\n  onDelete: IO<void>;\n};\n\nexport function PlayerCard(props: Props) {\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n\n  return (\n    <Grid item xs={6} sm={4} md={3} lg={2}>\n      <Card>\n        <CardMedia></CardMedia>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\">\n            {props.player.name}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton\n            aria-label=\"delete\"\n            onClick={() => setDeleteDialogOpen(true)}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n      <ConfirmationDialog\n        open={deleteDialogOpen}\n        title=\"player.delete.confirmDialog.title\"\n        content=\"player.delete.confirmDialog.content\"\n        onConfirm={() => {\n          setDeleteDialogOpen(false);\n          props.onDelete();\n        }}\n        onCancel={() => setDeleteDialogOpen(false)}\n      />\n    </Grid>\n  );\n}\n","import { FieldProps } from \"@buildo/formo\";\nimport { TextField as InternalTextField } from \"@material-ui/core\";\nimport { nonEmptyArray, option } from \"fp-ts\";\nimport { pipe } from \"fp-ts/function\";\nimport { NonEmptyArray } from \"fp-ts/NonEmptyArray\";\n\ntype Props = FieldProps<string, string, NonEmptyArray<string>> & {\n  placeholder: string;\n};\n\nexport function TextField(props: Props) {\n  return (\n    <InternalTextField\n      fullWidth\n      label={props.label}\n      defaultValue={props.placeholder}\n      disabled={props.disabled}\n      onChange={(e) => props.onChange(e.currentTarget.value)}\n      onBlur={props.onBlur}\n      value={props.value}\n      name={props.name}\n      error={pipe(props.issues, option.isSome)}\n      helperText={pipe(\n        props.issues,\n        option.map((issues) => pipe(issues, nonEmptyArray.head)),\n        option.toNullable\n      )}\n    />\n  );\n}\n","import { useIntl } from \"react-intl\";\nimport { Validator, validators } from \"@buildo/formo\";\nimport { constant, pipe } from \"fp-ts/function\";\nimport { array, either, option } from \"fp-ts\";\nimport { NonEmptyString } from \"io-ts-types/NonEmptyString\";\n\nexport const nonBlankString = (\n  errorMessage: string\n): Validator<string, NonEmptyString, string> =>\n  validators.validator(\n    either.fromPredicate(\n      (s): s is NonEmptyString => s.trim().length > 0,\n      constant(errorMessage)\n    )\n  );\n\nexport const uniqueString =\n  (\n    errorMessage: string\n  ): ((\n    collection: NonEmptyString[]\n  ) => Validator<string, NonEmptyString, string>) =>\n  (collection: NonEmptyString[]) =>\n    validators.validator(\n      either.fromPredicate(\n        (s): s is NonEmptyString =>\n          pipe(\n            collection,\n            array.findFirst((p) => p === s),\n            option.isNone\n          ),\n        constant(errorMessage)\n      )\n    );\n\nexport function useValidators() {\n  const intl = useIntl();\n\n  const defined = <T>() =>\n    validators.defined<T, string>(\n      intl.formatMessage({ id: \"form.validators.defined\" })\n    );\n\n  const definedNoExtract = <T>() =>\n    validators.definedNoExtract<T, string>(\n      intl.formatMessage({ id: \"form.validators.defined\" })\n    );\n\n  const nonBlankStringInternal = nonBlankString(\n    intl.formatMessage({ id: \"form.validators.nonBlankString\" })\n  );\n\n  const uniqueStringInternal = uniqueString(\n    intl.formatMessage({ id: \"form.validators.uniqueString\" })\n  );\n\n  return {\n    nonBlankString: nonBlankStringInternal,\n    uniqueString: uniqueStringInternal,\n    defined,\n    definedNoExtract,\n  };\n}\n","import { useFormo, validators } from \"@buildo/formo\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { IO } from \"fp-ts/IO\";\nimport { Reader } from \"fp-ts/Reader\";\nimport { NonEmptyString } from \"io-ts-types/lib/NonEmptyString\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { TextField } from \"../Form/TextField\";\nimport { useValidators } from \"../Form/validators\";\nimport { taskEither } from \"fp-ts\";\n\ntype Props = {\n  open: boolean;\n  title: string;\n  playerNames: NonEmptyString[];\n  onConfirm: Reader<NonEmptyString, void>;\n  onCancel: IO<void>;\n};\n\nexport function PlayerForm(props: Props) {\n  const { formatMessage } = useIntl();\n  const { nonBlankString, uniqueString } = useValidators();\n\n  const { fieldProps, handleSubmit } = useFormo(\n    {\n      initialValues: {\n        name: \"\",\n      },\n      fieldValidators: () => ({\n        name: validators.inParallel(\n          nonBlankString,\n          uniqueString(props.playerNames)\n        ),\n      }),\n    },\n    {\n      onSubmit: (values) =>\n        taskEither.fromIO(() => props.onConfirm(values.name)),\n    }\n  );\n\n  return (\n    <Dialog open={props.open} fullWidth onClose={props.onCancel}>\n      <DialogTitle>\n        <FormattedMessage id={props.title} />\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          label={formatMessage({\n            id: \"player.form.label.name\",\n          })}\n          placeholder=\"\"\n          {...fieldProps(\"name\")}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onCancel} color=\"primary\">\n          <FormattedMessage id=\"cancel\" />\n        </Button>\n        <Button onClick={handleSubmit} color=\"primary\">\n          <FormattedMessage id=\"ok\" />\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import {\n  AppBar,\n  Box,\n  createStyles,\n  Fab,\n  Grid,\n  IconButton,\n  makeStyles,\n  Theme,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport ArrowBackSharp from \"@material-ui/icons/ArrowBackSharp\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Player } from \"../domain\";\nimport { locations, useRouter } from \"../routing\";\nimport { useLocalStorageState } from \"../useLocalStorageState\";\nimport * as t from \"io-ts\";\nimport { PlayerCard } from \"../blocks/PlayerCard\";\nimport { array } from \"fp-ts\";\nimport { pipe } from \"fp-ts/function\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { PlayerForm } from \"../blocks/PlayerForm\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      position: \"absolute\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  })\n);\n\nexport function Players() {\n  const classes = useStyles();\n  const router = useRouter();\n\n  const [players, setPlayers] = useLocalStorageState(\n    \"players\",\n    t.array(Player),\n    []\n  );\n\n  const [playerFormOpen, setPlayerFormOpen] = useState(false);\n\n  return (\n    <Box display=\"flex\" width={1} flexDirection=\"column\" alignItems=\"center\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => router.navigateTo(locations.home)}\n          >\n            <ArrowBackSharp />\n          </IconButton>\n          <Box display=\"flex\" width={1}>\n            <Typography variant=\"h6\">\n              <FormattedMessage id=\"players\" />\n            </Typography>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Box\n        display=\"flex\"\n        m={2}\n        width={1}\n        flexDirection=\"row\"\n        alignItems=\"center\"\n      >\n        <Grid\n          container\n          direction=\"row\"\n          spacing={2}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          {players.map((p) => (\n            <PlayerCard\n              player={p}\n              onDelete={() =>\n                setPlayers(\n                  pipe(\n                    players,\n                    array.filter((m) => m.name !== p.name)\n                  )\n                )\n              }\n            />\n          ))}\n        </Grid>\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          className={classes.fab}\n          onClick={() => setPlayerFormOpen(true)}\n        >\n          <AddIcon />\n        </Fab>\n        {playerFormOpen && (\n          <PlayerForm\n            open={playerFormOpen}\n            title=\"player.form.label.title\"\n            playerNames={pipe(\n              players,\n              array.map((p) => p.name)\n            )}\n            onCancel={() => setPlayerFormOpen(false)}\n            onConfirm={(name) => {\n              setPlayers([...players, { name }]);\n              setPlayerFormOpen(false);\n            }}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { either, option } from \"fp-ts\";\nimport { pipe } from \"fp-ts/function\";\nimport { Type } from \"io-ts\";\nimport { useState } from \"react\";\nimport { getValue, setValue } from \"./localStorage\";\n\nexport function useLocalStorageState<T, TT>(\n  key: string,\n  codec: Type<T, TT>,\n  value: T\n): [T, (value: T) => void] {\n  const initValues = pipe(\n    getValue(key, codec),\n    option.getOrElse(() => {\n      setValue(key, codec, value);\n      return value;\n    })\n  );\n\n  const [reactState, setReactState] = useState(initValues);\n\n  const setState = (value: T) =>\n    pipe(\n      setValue(key, codec, value),\n      either.fold(\n        () => {},\n        () => setReactState(value)\n      )\n    );\n\n  return [reactState, setState];\n}\n","import {\n  Accordion,\n  AccordionSummary,\n  AppBar,\n  Box,\n  Grid,\n  IconButton,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport ArrowBackSharp from \"@material-ui/icons/ArrowBackSharp\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { FormattedMessage } from \"react-intl\";\nimport { locations, useRouter } from \"../routing\";\nimport { Faction, factions, roles } from \"../domain\";\nimport { pipe } from \"fp-ts/function\";\nimport { array, record } from \"fp-ts\";\nimport { useFormatFaction } from \"../utils\";\nimport { RoleCard } from \"../blocks/RoleCard\";\n\nexport function Roles() {\n  const router = useRouter();\n  const formatFaction = useFormatFaction();\n\n  return (\n    <Box display=\"flex\" width={1} flexDirection=\"column\" alignItems=\"center\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => router.navigateTo(locations.home)}\n          >\n            <ArrowBackSharp />\n          </IconButton>\n          <Box display=\"flex\" width={1}>\n            <Typography variant=\"h6\">\n              <FormattedMessage id=\"role\" />\n            </Typography>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Box display=\"flex\" width={1} flexDirection=\"column\" alignItems=\"center\">\n        {pipe(\n          factions,\n          array.map((f: Faction) => (\n            <Accordion key={f}>\n              <AccordionSummary expandIcon={<ExpandMore />}>\n                <Typography>{formatFaction(f)}</Typography>\n              </AccordionSummary>\n              <Box m={2}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  spacing={2}\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  {pipe(\n                    roles,\n                    record.filter((r) => r.faction === f),\n                    record.toArray,\n                    array.map(([, r]) => (\n                      <Grid item xs={12} sm={6} md={4} lg={3}>\n                        <RoleCard key={r.id} role={r} />\n                      </Grid>\n                    ))\n                  )}\n                </Grid>\n              </Box>\n            </Accordion>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { pipe, constant } from \"fp-ts/function\";\nimport \"./App.css\";\nimport { useBuildConfigContext } from \"./ConfigProvider\";\nimport { Game } from \"./Pages/Game\";\nimport { Home } from \"./Pages/Home\";\nimport { Players } from \"./Pages/Players\";\nimport { Roles } from \"./Pages/Roles\";\nimport { foldLocation } from \"./Router/RouterProvider\";\nimport { RouterProvider, routing, useRouter } from \"./routing\";\n\nfunction InternalApp(): JSX.Element {\n  const router = useRouter();\n\n  return pipe(\n    router.current,\n    foldLocation({\n      Home: constant(<Home />),\n      Roles: constant(<Roles />),\n      Game: constant(<Game />),\n      Players: constant(<Players />),\n    })\n  );\n}\n\nfunction App(): JSX.Element {\n  const buildConfig = useBuildConfigContext();\n\n  return (\n    <RouterProvider\n      basepath={buildConfig.basepath}\n      useHashHistory\n      routing={routing}\n    >\n      <InternalApp />\n    </RouterProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Box, CircularProgress } from \"@material-ui/core\";\n\nexport function Waiting() {\n  return (\n    <Box\n      display=\"flex\"\n      width={1}\n      height={1}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <CircularProgress />\n    </Box>\n  );\n}\n","import { option, taskEither } from \"fp-ts\";\nimport { identity } from \"io-ts\";\nimport { useEffect, useState } from \"react\";\nimport { Option } from \"fp-ts/Option\";\nimport { constant, pipe } from \"fp-ts/function\";\nimport { IntlProvider as InternalIntlProvider } from \"react-intl\";\nimport { Waiting } from \"./blocks/Common/Waiting\";\n\ntype Locale = \"it\";\n\ntype Props = {\n  children: JSX.Element;\n  locale: Locale;\n};\n\nfunction loadLocaleData(locale: Locale) {\n  return taskEither.tryCatch(() => {\n    switch (locale) {\n      case \"it\":\n        return import(\"./messages/it.json\").then((messages) => ({\n          ...messages.default,\n        }));\n    }\n  }, identity);\n}\n\nexport function IntlProvider(props: Props) {\n  const [messages, setMessages] = useState<Option<Record<string, string>>>(\n    option.none\n  );\n\n  useEffect(() => {\n    pipe(\n      loadLocaleData(props.locale),\n      taskEither.map((messages) => setMessages(option.some(messages)))\n    )();\n  }, [props.locale]);\n\n  return pipe(\n    messages,\n    option.fold(constant(<Waiting />), (messages) => (\n      <InternalIntlProvider messages={messages} locale={props.locale}>\n        {props.children}\n      </InternalIntlProvider>\n    ))\n  );\n}\n","import { either } from \"fp-ts\";\nimport * as t from \"io-ts\";\nimport { pipe } from \"fp-ts/function\";\nimport { failure } from \"io-ts/lib/PathReporter\";\nimport { optionFromNullable } from \"io-ts-types/optionFromNullable\";\nimport { NonEmptyString } from \"io-ts-types/NonEmptyString\";\nimport { Option } from \"fp-ts/Option\";\n\nexport type BuildConfig = {\n  basepath: Option<NonEmptyString>;\n};\n\nconst BuildConfigCodec = t.type(\n  {\n    REACT_APP_BASEPATH: optionFromNullable(NonEmptyString),\n  },\n  \"BuildConfig\"\n);\n\nexport const buildConfig: BuildConfig = pipe(\n  BuildConfigCodec.decode(process.env),\n  either.fold(\n    (errors) => {\n      throw new Error(failure(errors).join(\"\\n\"));\n    },\n    (env): BuildConfig => ({\n      basepath: env.REACT_APP_BASEPATH,\n    })\n  )\n);\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { IntlProvider } from \"./IntlProvider\";\nimport { StrictMode } from \"react\";\nimport { BuildConfigProvider } from \"./ConfigProvider\";\nimport { buildConfig } from \"./config\";\n\nconst locale = \"it\";\n\nReactDOM.render(\n  <StrictMode>\n    <BuildConfigProvider {...buildConfig}>\n      <IntlProvider locale={locale}>\n        <App />\n      </IntlProvider>\n    </BuildConfigProvider>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}