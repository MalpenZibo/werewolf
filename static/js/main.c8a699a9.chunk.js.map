{"version":3,"sources":["routing.ts","Router/RouterProvider.tsx","App.tsx","reportWebVitals.ts","blocks/Waiting.tsx","IntlProvider.tsx","index.tsx"],"names":["home","_tag","roles","game","players","defaults","end","rolesMatch","lit","then","gameMatch","playersMatch","router","zero","alt","parser","map","routing","formatLocation","l","format","formatter","parseLocation","s","parse","Route","RouterContext","createContext","option","none","RouterProvider","props","useState","window","location","pathname","setLocation","handleLocationChanges","useEffect","addEventListener","removeEventListener","Provider","value","some","children","useRouter","ctx","useContext","isNone","Error","current","navigateTo","newLocation","history","pushState","scrollTo","back","initializeRouter","App","matches","pipe","Home","constant","Roles","Game","Players","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Waiting","Box","display","width","height","alignItems","justifyContent","CircularProgress","IntlProvider","messages","setMessages","locale","taskEither","tryCatch","default","identity","fold","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8a699a9.chunk.js","sourcesContent":["import { end, format, lit, parse, Route, zero } from \"fp-ts-routing\";\nimport { initializeRouter, Routing } from \"./Router/RouterProvider\";\n\ninterface Home {\n  readonly _tag: \"Home\";\n}\n\ninterface Roles {\n  readonly _tag: \"Roles\";\n}\n\ninterface Game {\n  readonly _tag: \"Game\";\n}\n\ninterface Players {\n  readonly _tag: \"Players\";\n}\n\nexport type Location = Home | Roles | Game | Players;\n\nconst home: Home = { _tag: \"Home\" };\nconst roles: Roles = { _tag: \"Roles\" };\nconst game: Game = { _tag: \"Game\" };\nconst players: Players = { _tag: \"Players\" };\n\nexport const locations = {\n  home,\n  roles,\n  game,\n  players,\n};\n\nconst defaults = end;\nconst rolesMatch = lit(\"roles\").then(end);\nconst gameMatch = lit(\"game\").then(end);\nconst playersMatch = lit(\"players\").then(end);\n\nconst router = zero<Location>()\n  .alt(defaults.parser.map(() => home))\n  .alt(rolesMatch.parser.map(() => roles))\n  .alt(gameMatch.parser.map(() => game))\n  .alt(playersMatch.parser.map(() => players));\n\nfunction parseLocation(s: string): Location {\n  return parse(router, Route.parse(s), home);\n}\n\nfunction formatLocation(l: Location): string {\n  switch (l._tag) {\n    case \"Home\":\n      return format(defaults.formatter, l);\n    case \"Roles\":\n      return format(rolesMatch.formatter, l);\n    case \"Game\":\n      return format(gameMatch.formatter, l);\n    case \"Players\":\n      return format(playersMatch.formatter, l);\n  }\n}\n\nexport const routing: Routing<Location> = {\n  formatLocation,\n  parseLocation,\n};\n\nexport const { RouterProvider, useRouter } = initializeRouter<Location>();\n","import {\n  createContext,\n  useEffect,\n  useState,\n  useContext,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\nimport { Option } from \"fp-ts/Option\";\nimport { option } from \"fp-ts\";\n\ninterface ILocation {\n  readonly _tag: string;\n}\n\ninterface ILocationFoldable<K extends string> {\n  readonly _tag: K;\n}\n\nexport function foldLocation<\n  K extends string,\n  T extends ILocationFoldable<K>,\n  R\n>(\n  matches: {\n    [L in T[\"_tag\"]]: (args: Omit<Extract<T, { _tag: L }>, \"_tag\">) => R;\n  }\n): (location: T) => R {\n  return (location) => matches[location._tag](location as any);\n}\n\nexport type Routing<T extends ILocation> = {\n  formatLocation: (l: T) => string;\n  parseLocation: (s: string) => T;\n};\n\ntype Props<T extends ILocation> = {\n  routing: Routing<T>;\n  children: JSX.Element;\n};\n\nexport function initializeRouter<T extends ILocation>() {\n  const RouterContext = createContext<\n    Option<{\n      routing: Routing<T>;\n      location: T;\n      setLocation: Dispatch<SetStateAction<T>>;\n    }>\n  >(option.none);\n\n  const RouterProvider = (props: Props<T>) => {\n    const [location, setLocation] = useState(\n      props.routing.parseLocation(window.location.pathname)\n    );\n\n    const handleLocationChanges = () => {\n      setLocation(props.routing.parseLocation(window.location.pathname));\n    };\n\n    useEffect(() => {\n      window.addEventListener(\"popstate\", handleLocationChanges);\n\n      return () => {\n        window.removeEventListener(\"popstate\", handleLocationChanges);\n      };\n    });\n\n    return (\n      <RouterContext.Provider\n        value={option.some({ routing: props.routing, location, setLocation })}\n      >\n        {props.children}\n      </RouterContext.Provider>\n    );\n  };\n\n  const useRouter = () => {\n    const ctx = useContext(RouterContext);\n\n    if (option.isNone(ctx)) {\n      throw new Error(\"RouterContext not provided\");\n    }\n\n    const navigateTo = (location: T) => {\n      const newLocation = ctx.value.routing.formatLocation(location);\n      window.history.pushState(null, \"\", newLocation);\n      window.scrollTo(0, 0);\n      ctx.value.setLocation(location);\n    };\n\n    const back = () => {\n      window.history.back();\n    };\n\n    return { current: ctx.value.location, navigateTo, back };\n  };\n\n  return { RouterProvider, useRouter };\n}\n","import { pipe, constant } from \"fp-ts/function\";\nimport \"./App.css\";\nimport { foldLocation } from \"./Router/RouterProvider\";\nimport { useRouter } from \"./routing\";\n\nfunction App(): JSX.Element {\n  const router = useRouter();\n\n  return pipe(\n    router.current,\n    foldLocation({\n      Home: constant(<div></div>),\n      Roles: constant(<div></div>),\n      Game: constant(<div></div>),\n      Players: constant(<div></div>),\n    })\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Box, CircularProgress } from \"@material-ui/core\";\n\nexport function Waiting() {\n  return (\n    <Box\n      display=\"flex\"\n      width={1}\n      height={1}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <CircularProgress />\n    </Box>\n  );\n}\n","import { option, taskEither } from \"fp-ts\";\nimport { identity } from \"io-ts\";\nimport { useEffect, useState } from \"react\";\nimport { Option } from \"fp-ts/Option\";\nimport { constant, pipe } from \"fp-ts/function\";\nimport { IntlProvider as InternalIntlProvider } from \"react-intl\";\nimport { Waiting } from \"./blocks/Waiting\";\n\ntype Locale = \"it\";\n\ntype Props = {\n  children: JSX.Element;\n  locale: Locale;\n};\n\nfunction loadLocaleData(locale: Locale) {\n  return taskEither.tryCatch(() => {\n    switch (locale) {\n      case \"it\":\n        return import(\"./messages/it.json\").then((messages) => ({\n          ...messages.default,\n        }));\n    }\n  }, identity);\n}\n\nexport function IntlProvider(props: Props) {\n  const [messages, setMessages] = useState<Option<Record<string, string>>>(\n    option.none\n  );\n\n  useEffect(() => {\n    pipe(\n      loadLocaleData(props.locale),\n      taskEither.map((messages) => setMessages(option.some(messages)))\n    )();\n  }, [props.locale]);\n\n  return pipe(\n    messages,\n    option.fold(constant(<Waiting />), (messages) => (\n      <InternalIntlProvider messages={messages} locale={props.locale}>\n        {props.children}\n      </InternalIntlProvider>\n    ))\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { IntlProvider } from \"./IntlProvider\";\nimport { RouterProvider, routing } from \"./routing\";\nimport { StrictMode } from \"react\";\n\nconst locale = \"it\";\n\nReactDOM.render(\n  <StrictMode>\n    <IntlProvider locale={locale}>\n      <RouterProvider routing={routing}>\n        <App />\n      </RouterProvider>\n    </IntlProvider>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}